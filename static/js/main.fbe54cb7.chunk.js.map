{"version":3,"sources":["components/CategoryPage/Card/style.module.css","components/StatisticsPage/style.module.css","components/CategoryPage/style.module.css","components/CategoryPage/Rating/style.module.css","components/CategoryPage/ModalAfterGame/style.module.css","style.module.css","components/MainPage/style.module.css","components/MainPage/Card/style.module.css","components/StatisticsPage/StatisticHeader/style.module.css","utills/index.ts","reducers/state.ts","reducers/statistics.ts","reducers/index.ts","store.ts","selectors/index.ts","components/Header/index.tsx","components/CategoryPage/Card/index.tsx","components/CategoryPage/Rating/index.tsx","components/CategoryPage/ModalAfterGame/index.tsx","components/CategoryPage/index.tsx","components/MainPage/Card/index.tsx","components/MainPage/index.tsx","components/StatisticsPage/StatisticRow/index.tsx","components/StatisticsPage/StatisticHeader/index.tsx","components/StatisticsPage/index.tsx","App.tsx","index.tsx","components/Header/style.module.css"],"names":["module","exports","sound","word","event","undefined","audio","Audio","window","location","origin","play","target","getAttribute","createRandowWordOrder","words","order","Array","from","max","Set","copyMax","min","size","num","Math","floor","random","add","randomWordOrder","length","result","forEach","push","percent","correct","wrong","toFixed","TOGGLE_GAME","SELECT_CATEGORY","SHOW_MODAL","RESET_CURRENT_CATEGORY","CLOSE_MODAL","START_GAME","FINISH_GAME","SET_RANDOM_WORD_ORDER","SET_CURRENT_WORD","NEXT_WORD","CHANGE_RATING","SET_MISTAKE","OPEN_WINDOW_AFTER_GAME","CREATE_DIFFICULT_WORDS","initialState","categories","category","logo","cry","translate","dance","dive","draw","fish","fly","hug","jump","open","point","ride","run","sing","skip","swim","argue","build","carry","catch","drive","drop","pull","Adjective","big","small","fast","slow","friendly","unfriendly","young","old","cat","chick","chicken","dog","horse","pig","rabbit","sheep","bird","frog","giraffe","lion","mouse","turtle","dolphin","Clothes","skirt","pants","blouse","dress","boot","shirt","coat","shoe","Emotion","sad","angry","happy","tired","surprised","scared","smile","laugh","currentCategory","game","showModal","start","finish","currentWord","rating","allMistakes","windowAfterGame","data","state","type","payload","currentNum","indexOf","nextWord","randowWordOrder","setTimeout","selectCategory","dispatch","finishGame","console","log","CREATE_DATA","UPDATE_STATISTICS","SET_SORT_TYPE","RESET_WORDS","sortType","buttons","statistics","createData","localStorage","getItem","JSON","parse","Object","keys","translation","clicks","setItem","stringify","createRootReducers","history","combineReducers","router","connectRouter","createBrowserHistory","basename","middlewares","thunk","routerMiddleware","store","createStore","composeWithDevTools","applyMiddleware","getCategories","getStatusGame","getModal","getStart","getCurrentWord","getWindowAfterGame","getAllWords","getWordsForStatistics","arr","map","item","sort","a","b","getSortType","mapDispatchToProps","toggle","openModal","setCategory","create","connect","modal","allWords","show","style","burger","background","className","header","onClick","first","second","third","menu","to","active","htmlFor","button","id","onChange","input","checked","buttonBack","slider","setNextWord","setNewRating","addMistake","updateStatistic","statistic","backgroundImage","backgroundSize","backgroundPosition","startListener","e","classList","contains","inactive","card","front","display","cardHeader","back","parent","parentElement","previousElementSibling","setAttribute","addEventListener","rotate","stars","src","useEffect","div","alt","startBtn","setWordOrder","openWinModal","englishWords","entries","ModalAfterGame","cards","englishWord","btns","repeat","resetCategory","StatisticRow","setType","text","reset","createWords","copy","filter","index","boxShadow","wrapper","row","close","localName","eventTarget","app","path","component","CategoryPage","StatisticsPage","MainPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbe54cb7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__2ACZx\",\"front\":\"style_front__30GqM\",\"back\":\"style_back__1_XDo\",\"cardHeader\":\"style_cardHeader__k8U05\",\"rotate\":\"style_rotate__1EXbh\",\"inactive\":\"style_inactive__1i_Dd\",\"stars\":\"style_stars__3N-JM\",\"success\":\"style_success__3Mob2\",\"error\":\"style_error__3bT3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__2O0i0\",\"buttons\":\"style_buttons__1Y-_A\",\"reset\":\"style_reset__3ThlZ\",\"repeat\":\"style_repeat__2NQNB\",\"statistics\":\"style_statistics__3wyJg\",\"row\":\"style_row__2lcAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"style_cards__1hD5m\",\"btns\":\"style_btns__3mz4P\",\"startBtn\":\"style_startBtn__2blqT\",\"repeat\":\"style_repeat__1bPbi\",\"stars\":\"style_stars__117ew\",\"success\":\"style_success__hX9FH\",\"error\":\"style_error__2erVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stars\":\"style_stars__3Fo0O\",\"success\":\"style_success__oNQho\",\"error\":\"style_error__3-s93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"style_div__3Uy6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__r92wv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"style_cards__3l0XA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__1owJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sort\":\"style_sort__1yYfn\"};","import React from 'react';\nimport { wordInterface } from '../components/CategoryPage';\n\nexport function sound(word: string, event: React.MouseEvent<Element, MouseEvent> | undefined = undefined) {\n  if (event === undefined) {\n    const audio = new Audio(`${window.location.origin}/english-for-kids/audio/${word}.mp3`);\n    audio.play();\n  }\n  if (event !== undefined) {\n    if ((event.target as HTMLElement).getAttribute('data-type') !== 'rotate'\n    && (event.target as HTMLElement).getAttribute('data-type') !== 'back') {\n      const audio = new Audio(`${window.location.origin}/english-for-kids/audio/${word}.mp3`);\n      audio.play();\n    }\n  }\n}\n\nfunction randomWordOrder(max: number) {\n  const order: Set<number> = new Set();\n  let copyMax = max;\n  let min = 0;\n  while (order.size !== max) {\n    const num = Math.floor(Math.random() * (copyMax - min) + min);\n    order.add(num);\n    if (max === num) {\n      copyMax -= 1;\n    }\n    if (min === num) {\n      min += 1;\n    }\n  }\n  return order;\n}\n\nexport function createRandowWordOrder(words: Array<wordInterface>) {\n  const order = Array.from(randomWordOrder(words.length));\n\n  const result: Array<string> = [];\n  order.forEach((num) => {\n    result.push(words[num][0]);\n  });\n\n  return result;\n}\n\nexport function percent(correct: number, wrong: number) {\n  if (wrong === 0) {\n    return 0;\n  }\n  const sum = correct + wrong;\n  return +(wrong / sum).toFixed(2) * 100;\n}\n","import { Dispatch } from 'redux';\nimport { sound } from '../utills';\n\nconst TOGGLE_GAME = 'TOGGLE_GAME';\nconst SELECT_CATEGORY = 'SELECT_CATEGORY';\nconst SHOW_MODAL = 'SHOW_MODAL';\nconst RESET_CURRENT_CATEGORY = 'RESET_CURRENT_CATEGORY';\nconst CLOSE_MODAL = 'CLOSE_MODAL';\nconst START_GAME = 'START_GAME';\nconst FINISH_GAME = 'FINISH_GAME';\nconst SET_RANDOM_WORD_ORDER = 'SET_RANDOM_WORD_ORDER';\nconst SET_CURRENT_WORD = 'SET_CURRENT_WORD';\nconst NEXT_WORD = 'NEXT_WORD';\nconst CHANGE_RATING = 'CHANGE_RATING';\nconst SET_MISTAKE = 'SET_MISTAKE';\nconst OPEN_WINDOW_AFTER_GAME = 'OPEN_WINDOW_AFTER_GAME';\nconst CREATE_DIFFICULT_WORDS = 'CREATE_DIFFICULT_WORDS';\n\nexport interface StateInterface {\n    categories: Array<Record<string, string>>,\n    words: Record<string, Record<string, Record<string, string>>>,\n    currentCategory: string,\n    game: boolean,\n    showModal: boolean,\n    start: boolean,\n    finish: boolean,\n    currentWord: string,\n    randomWordOrder: Array<string>,\n    rating: Array<string>,\n    allMistakes: number,\n    windowAfterGame: boolean\n}\n\nconst initialState = {\n  categories: [\n    {\n      category: 'Action (set A)',\n      logo: 'https://english-for-kids.netlify.app/static/media/dance.c70cc103.jpg',\n    },\n    {\n      category: 'Action (set B)',\n      logo: 'https://english-for-kids.netlify.app/static/media/swim.bddf0687.jpg',\n    },\n    {\n      category: 'Action (set C)',\n      logo: 'https://english-for-kids.netlify.app/static/media/drop.8cb9f43a.jpg',\n    },\n    {\n      category: 'Adjective',\n      logo: 'https://english-for-kids.netlify.app/static/media/friendly.ebfd8e9a.jpg',\n    },\n    {\n      category: 'Animal (set A)',\n      logo: 'https://english-for-kids.netlify.app/static/media/cat.e91220bb.jpg',\n    },\n    {\n      category: 'Animal (set B)',\n      logo: 'https://english-for-kids.netlify.app/static/media/bird.f0a80efa.jpg',\n    },\n    {\n      category: 'Clothes',\n      logo: 'https://english-for-kids.netlify.app/static/media/blouse.37a6d8fa.jpg',\n    },\n    {\n      category: 'Emotion',\n      logo: 'https://english-for-kids.netlify.app/static/media/smile.f55cb470.jpg',\n    },\n  ],\n  words: {\n    'Action (set A)': {\n      cry: {\n        translate: 'плакать',\n        logo: 'https://english-for-kids.netlify.app/static/media/cry.26a84a2c.jpg',\n      },\n      dance: {\n        translate: 'танцевать',\n        logo: 'https://english-for-kids.netlify.app/static/media/dance.c70cc103.jpg',\n      },\n      dive: {\n        translate: 'нырять',\n        logo: 'https://english-for-kids.netlify.app/static/media/dive.41b7d509.jpg',\n      },\n      draw: {\n        translate: 'рисовать',\n        logo: 'https://english-for-kids.netlify.app/static/media/draw.82be9665.jpg',\n      },\n      fish: {\n        translate: 'ловить рыбу',\n        logo: 'https://english-for-kids.netlify.app/static/media/fish.27eb7746.jpg',\n      },\n      fly: {\n        translate: 'летать',\n        logo: 'https://english-for-kids.netlify.app/static/media/fly.6122fa03.jpg',\n      },\n      hug: {\n        translate: 'обнимать',\n        logo: 'https://english-for-kids.netlify.app/static/media/hug.9dda3c46.jpg',\n      },\n      jump: {\n        translate: 'прыгать',\n        logo: 'https://english-for-kids.netlify.app/static/media/jump.ac945820.jpg',\n      },\n    },\n    'Action (set B)': {\n      open: {\n        translate: 'открывать',\n        logo: 'https://english-for-kids.netlify.app/static/media/open.191b88af.jpg',\n      },\n      play: {\n        translate: 'играть',\n        logo: 'https://english-for-kids.netlify.app/static/media/play.75cbc10c.jpg',\n      },\n      point: {\n        translate: 'указывать',\n        logo: 'https://english-for-kids.netlify.app/static/media/point.ba50996a.jpg',\n      },\n      ride: {\n        translate: 'ездить',\n        logo: 'https://english-for-kids.netlify.app/static/media/ride.b7a77474.jpg',\n      },\n      run: {\n        translate: 'бегать',\n        logo: 'https://english-for-kids.netlify.app/static/media/run.0e8d157f.jpg',\n      },\n      sing: {\n        translate: 'петь',\n        logo: 'https://english-for-kids.netlify.app/static/media/sing.d2d52786.jpg',\n      },\n      skip: {\n        translate: 'пропускать, прыгать',\n        logo: 'https://english-for-kids.netlify.app/static/media/skip.081bf61e.jpg',\n      },\n      swim: {\n        translate: 'плавать',\n        logo: 'https://english-for-kids.netlify.app/static/media/swim.bddf0687.jpg',\n      },\n    },\n    'Action (set C)': {\n      argue: {\n        translate: 'спорить',\n        logo: 'https://english-for-kids.netlify.app/static/media/argue.06b9a73a.jpg',\n      },\n      build: {\n        translate: 'строить',\n        logo: 'https://english-for-kids.netlify.app/static/media/build.0ddc52ca.jpg',\n      },\n      carry: {\n        translate: 'нести',\n        logo: 'https://english-for-kids.netlify.app/static/media/carry.4e29617e.jpg',\n      },\n      catch: {\n        translate: 'ловить',\n        logo: 'https://english-for-kids.netlify.app/static/media/catch.02ee0391.jpg',\n      },\n      drive: {\n        translate: 'водить машину',\n        logo: 'https://english-for-kids.netlify.app/static/media/drive.7756db52.jpg',\n      },\n      drop: {\n        translate: 'падать',\n        logo: 'https://english-for-kids.netlify.app/static/media/drop.8cb9f43a.jpg',\n      },\n      pull: {\n        translate: 'тянуть',\n        logo: 'https://english-for-kids.netlify.app/static/media/pull.958b53a6.jpg',\n      },\n      push: {\n        translate: 'толкать',\n        logo: 'https://english-for-kids.netlify.app/static/media/push.f5183491.jpg',\n      },\n    },\n    Adjective: {\n      big: {\n        translate: 'большой',\n        logo: 'https://english-for-kids.netlify.app/static/media/big.15366658.jpg',\n      },\n      small: {\n        translate: 'маленький',\n        logo: 'https://english-for-kids.netlify.app/static/media/small.a9f7a59d.jpg',\n      },\n      fast: {\n        translate: 'быстрый',\n        logo: 'https://english-for-kids.netlify.app/static/media/fast.2d5d071e.jpg',\n      },\n      slow: {\n        translate: 'медленный',\n        logo: 'https://english-for-kids.netlify.app/static/media/slow.7bbcaa16.jpg',\n      },\n      friendly: {\n        translate: 'дружелюбный',\n        logo: 'https://english-for-kids.netlify.app/static/media/friendly.ebfd8e9a.jpg',\n      },\n      unfriendly: {\n        translate: 'недружелюбный',\n        logo: 'https://english-for-kids.netlify.app/static/media/unfriendly.9bb158bd.jpg',\n      },\n      young: {\n        translate: 'молодой',\n        logo: 'https://english-for-kids.netlify.app/static/media/young.7498933a.jpg',\n      },\n      old: {\n        translate: 'старый',\n        logo: 'https://english-for-kids.netlify.app/static/media/old.76174203.jpg',\n      },\n    },\n    'Animal (set A)': {\n      cat: {\n        translate: 'кошка',\n        logo: 'https://english-for-kids.netlify.app/static/media/cat.e91220bb.jpg',\n      },\n      chick: {\n        translate: 'цыпленок',\n        logo: 'https://english-for-kids.netlify.app/static/media/chick.11bf9adb.jpg',\n      },\n      chicken: {\n        translate: 'курица',\n        logo: 'https://english-for-kids.netlify.app/static/media/chicken.915430df.jpg',\n      },\n      dog: {\n        translate: 'собака',\n        logo: 'https://english-for-kids.netlify.app/static/media/dog.109811ba.jpg',\n      },\n      horse: {\n        translate: 'лошадь',\n        logo: 'https://english-for-kids.netlify.app/static/media/horse.8a825b3b.jpg',\n      },\n      pig: {\n        translate: 'свинья',\n        logo: 'https://english-for-kids.netlify.app/static/media/pig.72810927.jpg',\n      },\n      rabbit: {\n        translate: 'кролик',\n        logo: 'https://english-for-kids.netlify.app/static/media/rabbit.7242c16a.jpg',\n      },\n      sheep: {\n        translate: 'овца',\n        logo: 'https://english-for-kids.netlify.app/static/media/sheep.8d2deb43.jpg',\n      },\n    },\n    'Animal (set B)': {\n      bird: {\n        translate: 'птица',\n        logo: 'https://english-for-kids.netlify.app/static/media/bird.f0a80efa.jpg',\n      },\n      fish: {\n        translate: 'рыба',\n        logo: 'https://english-for-kids.netlify.app/static/media/fish1.296cfcd4.jpg',\n      },\n      frog: {\n        translate: 'лягушка',\n        logo: 'https://english-for-kids.netlify.app/static/media/frog.e8a07dca.jpg',\n      },\n      giraffe: {\n        translate: 'жираф',\n        logo: 'https://english-for-kids.netlify.app/static/media/giraffe.32ab22c7.jpg',\n      },\n      lion: {\n        translate: 'лев',\n        logo: 'https://english-for-kids.netlify.app/static/media/lion.273c0650.jpg',\n      },\n      mouse: {\n        translate: 'мышь',\n        logo: 'https://english-for-kids.netlify.app/static/media/mouse.a73259d9.jpg',\n      },\n      turtle: {\n        translate: 'черепаха',\n        logo: 'https://english-for-kids.netlify.app/static/media/turtle.b1e5849e.jpg',\n      },\n      dolphin: {\n        translate: 'дельфин',\n        logo: 'https://english-for-kids.netlify.app/static/media/dolphin.905447d1.jpg',\n      },\n    },\n    Clothes: {\n      skirt: {\n        translate: 'юбка',\n        logo: 'https://poshivm.ru/blog/img/items/i-16.jpg',\n      },\n      pants: {\n        translate: 'брюки',\n        logo: 'https://images.ru.prom.st/791403737_w500_h500_adidas-bryuki-sportivnye.jpg',\n      },\n      blouse: {\n        translate: 'блузка',\n        logo: 'https://i.etsystatic.com/19861253/d/il/bfe168/1932269032/il_340x270.1932269032_bhxs.jpg?version=1',\n      },\n      dress: {\n        translate: 'платье',\n        logo: 'https://prformula.ru/wp-content/uploads/2019/05/3-1-300x200.jpg',\n      },\n      boot: {\n        translate: 'ботинок',\n        logo: 'https://images.ru.prom.st/675422978_w200_h200_hummer-botinki-rabochie.jpg',\n      },\n      shirt: {\n        translate: 'рубашка',\n        logo: 'https://mirnadivane.ru/wp-content/uploads/2017/05/effekt-ot-otbelivateley-s-hlorom-zametney-vsego-no-300x200.jpg',\n      },\n      coat: {\n        translate: 'пальто',\n        logo: 'https://foxi.ro/upload/articles/91/big-paltoane-dama--1.jpg',\n      },\n      shoe: {\n        translate: 'туфли',\n        logo: 'https://kzn-ritual.ru/upload/iblock/a53/a53ec334b89baa9efc4af2af1f2a7abd.jpg',\n      },\n    },\n    Emotion: {\n      sad: {\n        translate: 'грустный',\n        logo: 'https://c.wallhere.com/photos/b7/44/puppy_dog_face_sad_sight-645298.jpg!s',\n      },\n      angry: {\n        translate: 'сердитый',\n        logo: 'https://arulchandrana.files.wordpress.com/2011/10/jangan-buat-dia-keras-dan-marah-hatinya.jpg',\n      },\n      happy: {\n        translate: 'счастливый',\n        logo: 'http://www.studiodiogene.org/wp-content/uploads/2014/11/3061008251_28e8f88a58_b-300x200.jpg',\n      },\n      tired: {\n        translate: 'уставший',\n        logo: 'https://ideasqueinspiran.com/wp-content/uploads/2016/04/sindrome-de-burnout-en-el-docente-300x200.jpg',\n      },\n      surprised: {\n        translate: 'удивленный',\n        logo: 'https://wikimedspravka.ru/wp-content/public_images2/26e34439168bd4edaf34375aafb04d6f-300x200.jpg',\n      },\n      scared: {\n        translate: 'испуганный',\n        logo: 'https://bioliferezonans.com/wp-content/uploads/2019/12/panik-atak-300x200.jpg',\n      },\n      smile: {\n        translate: 'улыбка',\n        logo: 'https://iamhuman.ru/images/upload_images/1245517/01-logo_c91ad.jpg',\n      },\n      laugh: {\n        translate: 'смех',\n        logo: 'https://miro.medium.com/max/300/0*pSxV30GVEVbJGXHU.jpg',\n      },\n    },\n    'Difficult Words': {},\n  },\n  currentCategory: '',\n  game: false,\n  showModal: false,\n  start: false,\n  finish: false,\n  currentWord: '',\n  randomWordOrder: [],\n  rating: [],\n  allMistakes: 0,\n  windowAfterGame: false,\n} as StateInterface;\n\nexport const data = (state = initialState, { type, payload }: Record<string, string>) => {\n  const currentNum = state.randomWordOrder.indexOf(state.currentWord);\n  const nextWord = state.randomWordOrder[currentNum + 1];\n  switch (type) {\n    case TOGGLE_GAME:\n      return { ...state, game: !state.game };\n    case SELECT_CATEGORY:\n      return { ...state, currentCategory: payload };\n    case SHOW_MODAL:\n      return { ...state, showModal: !state.showModal };\n    case RESET_CURRENT_CATEGORY:\n      return { ...state, currentCategory: '' };\n    case CLOSE_MODAL:\n      return { ...state, showModal: false };\n    case START_GAME:\n      return { ...state, start: true };\n    case FINISH_GAME:\n      return {\n        ...state,\n        start: false,\n        finish: true,\n        rating: [],\n        allMistakes: 0,\n        currentWord: '',\n        windowAfterGame: false,\n        randowWordOrder: [],\n      };\n    case SET_RANDOM_WORD_ORDER:\n      return { ...state, randomWordOrder: payload };\n    case SET_CURRENT_WORD:\n      return { ...state, currentWord: payload };\n    case NEXT_WORD:\n      if (nextWord !== undefined) {\n        setTimeout(() => sound(nextWord), 1000);\n        return { ...state, currentWord: nextWord };\n      }\n      return { ...state, currentWord: undefined };\n    case CHANGE_RATING:\n      return { ...state, rating: [...state.rating, payload] };\n    case SET_MISTAKE:\n      return { ...state, allMistakes: state.allMistakes + 1 };\n    case OPEN_WINDOW_AFTER_GAME:\n      return { ...state, windowAfterGame: true };\n    case CREATE_DIFFICULT_WORDS:\n      return { ...state, words: { ...state.words, 'Difficult Words': payload } };\n    default:\n      return state;\n  }\n};\n\nexport const toggleGame = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: TOGGLE_GAME,\n  });\n};\n\nexport const selectCategory = (category: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SELECT_CATEGORY,\n    payload: category,\n  });\n};\n\nexport const showModal = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SHOW_MODAL,\n  });\n};\n\nexport const resetCurrentCategory = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: RESET_CURRENT_CATEGORY,\n  });\n};\n\nexport const closeModal = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: CLOSE_MODAL,\n  });\n};\n\nexport const startGame = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: START_GAME,\n  });\n};\n\nexport const finishGame = () => (dispatch: Dispatch) => {\n  console.log('finish');\n  dispatch({\n    type: FINISH_GAME,\n  });\n};\n\nconst setCurrentWord = (word: string) => ({\n  type: SET_CURRENT_WORD,\n  payload: word,\n});\n\nexport const setRandomWordOrder = (order: Array<string>) => (dispatch: Dispatch) => {\n  dispatch(setCurrentWord(order[0]));\n  dispatch({\n    type: SET_RANDOM_WORD_ORDER,\n    payload: order,\n  });\n};\n\nexport const nextWord = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: NEXT_WORD,\n  });\n};\n\nexport const changeRating = (type: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: CHANGE_RATING,\n    payload: type,\n  });\n};\n\nexport const setMistake = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_MISTAKE,\n  });\n};\n\nexport const openWindowAfterGame = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: OPEN_WINDOW_AFTER_GAME,\n  });\n};\n\nexport const createDifficultWords = (words:Array<Record<string, string|number>>) => (dispatch: Dispatch) => {\n  const copy = [...words];\n  const result: Record<string, Record<string, string | number>> = {};\n  copy.sort((a, b) => {\n    if (a.percent < b.percent) {\n      return 1;\n    }\n    if (a.percent > b.percent) {\n      return -1;\n    }\n    return 0;\n  });\n  copy.filter(\n    (item, index) => (item.percent > 0 && index < 8),\n  ).forEach(({ word, translation, logo }) => {\n    result[word] = {\n      translate: translation,\n      logo,\n    };\n  });\n  dispatch({\n    type: CREATE_DIFFICULT_WORDS,\n    payload: result,\n  });\n};\n","import { Dispatch } from 'redux';\nimport { percent } from '../utills';\n\nconst CREATE_DATA = 'CREATE_DATA';\nconst UPDATE_STATISTICS = 'UPDATE_STATISTICS';\nconst SET_SORT_TYPE = 'SET_SORT_TYPE';\nconst RESET_WORDS = 'RESET_WORDS';\n\nexport interface StatisticsInterface {\n    words: Array<Record<string, string | number>>,\n    sortType: string,\n    order: string,\n    buttons: Array<string>\n}\n\nconst initialState = {\n  words: [],\n  sortType: 'word',\n  order: 'ASC',\n  buttons: ['word', 'translation', 'category', 'clicks', 'correct', 'wrong', 'percent'],\n} as StatisticsInterface;\n\nexport const statistics = (state = initialState, { type, payload }: Record<string, string>) => {\n  switch (type) {\n    case CREATE_DATA:\n    case RESET_WORDS:\n    case UPDATE_STATISTICS:\n      return { ...state, words: payload };\n    case SET_SORT_TYPE:\n      if (state.sortType === payload) {\n        return state.order === 'ASC' ? { ...state, order: 'DESC' } : { ...state, order: 'ASC' };\n      }\n      return { ...state, sortType: payload, order: 'ASC' };\n    default:\n      return state;\n  }\n};\n\nexport const createData = (data: Record<string, Record<string, Record<string, string | number>>>) => (dispatch: Dispatch) => {\n  let result: Record<string, Record<string, string | number>> = {};\n  if (!localStorage.getItem('statistics')) {\n    const keys = Object.keys(data);\n    keys.forEach((category) => {\n      const words = Object.keys(data[category]);\n      words.forEach((word) => {\n        result[word] = {\n          translation: data[category][word].translate,\n          category,\n          clicks: 0,\n          correct: 0,\n          wrong: 0,\n          percent: 0.00,\n          logo: data[category][word].logo,\n        };\n      });\n    });\n    localStorage.setItem('statistics', JSON.stringify(result));\n  } else {\n    result = JSON.parse(localStorage.getItem('statistics')!);\n  }\n  dispatch({\n    type: CREATE_DATA,\n    payload: result,\n  });\n};\n\nexport const updateStatistics = (type: string, word: string) => (dispatch: Dispatch) => {\n  const statistic = JSON.parse(localStorage.getItem('statistics')!);\n  switch (type) {\n    case 'clicks':\n      statistic[word].clicks += 1;\n      break;\n    case 'correct':\n      statistic[word].correct += 1;\n      statistic[word].percent = percent(statistic[word].correct, statistic[word].wrong);\n      break;\n    case 'wrong':\n      statistic[word].wrong += 1;\n      statistic[word].percent = percent(statistic[word].correct, statistic[word].wrong);\n      break;\n    default:\n      return;\n  }\n  dispatch({\n    type: UPDATE_STATISTICS,\n    payload: statistic,\n  });\n  localStorage.setItem('statistics', JSON.stringify(statistic));\n};\n\nexport const setSortType = (word: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_SORT_TYPE,\n    payload: word,\n  });\n};\n\nexport const resetWords = () => (dispatch: Dispatch) => {\n  const words = JSON.parse(localStorage.getItem('statistics')!);\n  const arr = Object.keys(words);\n  arr.forEach((item) => {\n    const keys = Object.keys(words[item]);\n    keys.forEach((word) => {\n      switch (word) {\n        case 'clicks':\n        case 'correct':\n        case 'wrong':\n        case 'percent':\n          words[item][word] = 0;\n          break;\n        default:\n          break;\n      }\n    });\n  });\n  localStorage.setItem('statistics', JSON.stringify(words));\n  dispatch({\n    type: RESET_WORDS,\n    payload: words,\n  });\n};\n","import { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\nimport { combineReducers } from 'redux';\nimport { data } from './state';\nimport { statistics } from './statistics';\n\nconst createRootReducers = (history: History<unknown>) => combineReducers({\n  data,\n  statistics,\n  router: connectRouter(history),\n});\n\nexport default createRootReducers;\n","import { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createRootReducers from './reducers';\n\nexport const history = createBrowserHistory({ basename: '/english-for-kids' });\n\nconst middlewares = [thunk, routerMiddleware(history)];\n\nconst store = createStore(\n  createRootReducers(history),\n  composeWithDevTools(applyMiddleware(...middlewares)),\n);\n\nexport default store;\n","import { StateInterface } from '../reducers/state';\nimport { StatisticsInterface } from '../reducers/statistics';\n\nexport const getCategories = (state: StateInterface) => state.categories;\n\nexport const getStatusGame = (state: StateInterface) => state.game;\n\nexport const getCurrentCategory = (state: StateInterface) => state.currentCategory;\n\nexport const getModal = (state: StateInterface) => state.showModal;\n\nexport const getWords = (state: StateInterface) => state.words[state.currentCategory];\n\nexport const getStart = (state: StateInterface) => state.start;\n\nexport const getCurrentWord = (state: StateInterface) => state.currentWord;\n\nexport const getWindowAfterGame = (state: StateInterface) => state.windowAfterGame;\n\nexport const getRating = (state: StateInterface) => state.rating;\n\nexport const getAllMistakes = (state: StateInterface) => state.allMistakes;\n\nexport const getAllWords = (state: StateInterface) => state.words;\n\ninterface MyInterface {\n  word: string,\n  translation: string,\n  category: number,\n  clicks: number,\n  correct: number,\n  wrong: number,\n  percent: number,\n  logo: string\n}\n\nexport const getWordsForStatistics = ({ words, sortType, order }: StatisticsInterface) => {\n  const keys: Array<string> = Object.keys(words);\n  const arr = keys.map((item: string): MyInterface => {\n    const result = {\n      word: item,\n      translation: words[item].translation,\n      category: words[item].category,\n      clicks: words[item].clicks,\n      correct: words[item].correct,\n      wrong: words[item].wrong,\n      percent: words[item].percent,\n      logo: words[item].logo,\n    };\n    return result;\n  });\n  arr.sort((a: MyInterface, b: MyInterface) => {\n    if (order === 'ASC' ? a[sortType] > b[sortType] : a[sortType] < b[sortType]) {\n      return 1;\n    }\n    if (order === 'ASC' ? a[sortType] < b[sortType] : a[sortType] > b[sortType]) {\n      return -1;\n    }\n    return 0;\n  });\n  return arr;\n};\n\nexport const getButtons = (state: StatisticsInterface) => state.buttons;\n\nexport const getOrder = (state: StatisticsInterface) => state.order;\n\nexport const getSortType = (state: StatisticsInterface) => state.sortType;\n","import { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport {\n  getAllWords, getCategories, getCurrentCategory, getModal, getStatusGame,\n} from '../../selectors';\nimport {\n  finishGame, selectCategory, showModal, StateInterface, toggleGame,\n} from '../../reducers/state';\nimport style from './style.module.css';\nimport { createData } from '../../reducers/statistics';\n\ninterface MyInterface {\n    game: boolean,\n    toggle: Function,\n    openModal: Function,\n    modal: boolean,\n    categories: Array<Record<string, string>>,\n    currentCategory: string,\n    setCategory: Function,\n    finish: Function,\n    create: Function,\n    allWords: Record<string, Record<string, Record<string, string>>>\n}\n\nconst Header = ({\n  game,\n  toggle,\n  openModal, modal, categories, currentCategory, setCategory, finish, create, allWords,\n}: MyInterface) => {\n  const show = `${style.burger} ${style.show}`;\n  const background = {\n    background: game ? 'linear-gradient(180deg,#fd6a63,#feb46b)' : 'linear-gradient(180deg, #0099ae,#00bf82)',\n  };\n  return (\n    <header className={style.header}>\n      <div aria-hidden=\"true\" onClick={() => openModal()} className={modal ? show : style.burger}>\n        <div className={style.first} />\n        <div className={style.second} />\n        <div className={style.third} />\n      </div>\n      <ul style={background} className={modal ? `${style.menu} ${style.show}` : style.menu}>\n        <Link onClick={() => finish()} to=\"/\" className={!currentCategory ? style.active : ''}>main page</Link>\n        {categories.map(({ category }) => (\n          <Link\n            key={category}\n            onClick={() => { setCategory(category); finish(); create(allWords); }}\n            to={`/category/${category}`}\n            className={currentCategory === category ? style.active : ''}\n          >\n            {category}\n          </Link>\n        ))}\n        <Link\n          onClick={() => { setCategory('statistics'); finish(); create(allWords); }}\n          to=\"/statistics\"\n          className={currentCategory === 'statistics' ? style.active : ''}\n        >\n          statistics page\n        </Link>\n      </ul>\n      <label htmlFor=\"button\" className={style.button}>\n        <input\n          id=\"button\"\n          onChange={game ? () => toggle() : () => { toggle(); finishGame(); }}\n          type=\"checkbox\"\n          className={style.input}\n          checked={game}\n        />\n        <span className={style.buttonBack} data-game={game ? 'Play' : 'Train'} />\n        <span className={style.slider} />\n      </label>\n    </header>\n  );\n};\n\nconst mapStateToProps = ({ data }: Record<string, StateInterface>) => ({\n  game: getStatusGame(data),\n  modal: getModal(data),\n  categories: getCategories(data),\n  currentCategory: getCurrentCategory(data),\n  allWords: getAllWords(data),\n});\nconst mapDispatchToProps = {\n  toggle: toggleGame,\n  openModal: showModal,\n  setCategory: selectCategory,\n  finish: finishGame,\n  create: createData,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  changeRating, nextWord, setMistake, StateInterface,\n} from '../../../reducers/state';\nimport { updateStatistics } from '../../../reducers/statistics';\nimport { getCurrentWord, getStart, getStatusGame } from '../../../selectors';\nimport { sound } from '../../../utills';\nimport style from './style.module.css';\n\ninterface MyInterface {\n    translation: string,\n    logo: string,\n    word: string,\n    game: boolean,\n    start: boolean,\n    currentWord: string,\n    setNextWord: Function,\n    setNewRating: Function,\n    addMistake: Function,\n    updateStatistic: Function\n}\n\nconst Card = ({\n  translation,\n  logo, word, game, start, currentWord, setNextWord, setNewRating, addMistake, updateStatistic,\n}: MyInterface) => {\n  function checkWord(event: React.MouseEvent<Element, MouseEvent>) {\n    if (!(event.target as HTMLElement).classList.contains(style.inactive)) {\n      if (currentWord === word) {\n        setNextWord();\n        updateStatistic('correct', currentWord);\n        setNewRating('success');\n        (event.target as HTMLElement).classList.add(style.inactive);\n        sound('SUCCESS');\n      } else {\n        updateStatistic('wrong', currentWord);\n        setNewRating('error');\n        addMistake();\n        sound('ERROR');\n      }\n    }\n  }\n  const background = {\n    backgroundImage: `url(${logo})`,\n    backgroundSize: !game ? 'contain' : 'cover',\n    backgroundPosition: !game ? '' : '50%',\n  };\n  const startListener = start ? (e: React.MouseEvent<Element, MouseEvent>) => checkWord(e) : () => {};\n  return (\n    <div\n      aria-hidden=\"true\"\n      onClick={game ? (e: React.MouseEvent<Element, MouseEvent>) => startListener(e)\n        : (e: React.MouseEvent<Element, MouseEvent>) => { sound(word, e); updateStatistic('clicks', word); }}\n      className={style.card}\n    >\n      <div className={style.front} style={background}>\n        <div style={{ display: !game ? 'block' : 'none' }} className={style.cardHeader}>{word}</div>\n      </div>\n      <div data-type=\"back\" className={style.back} style={background}>\n        <div style={{ display: !game ? 'block' : 'none' }} className={style.cardHeader}>{translation}</div>\n      </div>\n      <div\n        aria-hidden=\"true\"\n        onClick={(event) => {\n          const parent = (event.target as HTMLElement).parentElement;\n          const back = (event.target as HTMLElement).previousElementSibling;\n          if (parent && back) {\n            parent.setAttribute('style', 'transform: rotateY(180deg)');\n            back.addEventListener('mouseout', () => {\n              parent.setAttribute('style', 'transform: rotateY(0deg)');\n            });\n          }\n        }}\n        className={style.rotate}\n        data-type=\"rotate\"\n        style={{ display: !game ? 'block' : 'none' }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ data }: Record<string, StateInterface>) => ({\n  game: getStatusGame(data),\n  start: getStart(data),\n  currentWord: getCurrentWord(data),\n});\nconst mapDispatchToProps = {\n  setNextWord: nextWord,\n  setNewRating: changeRating,\n  addMistake: setMistake,\n  updateStatistic: updateStatistics,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { StateInterface } from '../../../reducers/state';\nimport { getRating } from '../../../selectors';\nimport style from './style.module.css';\n\ninterface MyInterface {\n    rating: Array<string>\n}\n\nconst Rating = ({ rating }: MyInterface) => (\n  <div className={style.stars}>\n    {rating.map((type) => <div className={style[type]} />)}\n  </div>\n);\n\nconst mapStateToProps = ({ data }: Record<string, StateInterface>) => ({\n  rating: getRating(data),\n});\n\nexport default connect(mapStateToProps)(Rating);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { StateInterface } from '../../../reducers/state';\nimport { getAllMistakes } from '../../../selectors';\nimport { sound } from '../../../utills';\nimport style from './style.module.css';\n\ninterface MyInterface {\n    allMistakes: number\n}\n\nconst WindowAfterGame = ({ allMistakes }: MyInterface) => {\n  const src = allMistakes === 0\n    ? 'https://github.com/rolling-scopes-school/tasks/blob/master/tasks/rslang/english-for.kids.data/img/success.jpg?raw=true'\n    : 'https://github.com/rolling-scopes-school/tasks/blob/master/tasks/rslang/english-for.kids.data/img/failure.jpg?raw=true';\n  useEffect(() => {\n    if (allMistakes === 0) {\n      sound('WIN');\n    } else {\n      sound('LOSE');\n    }\n  });\n  if (!allMistakes) {\n    return (\n      <div className={style.div}>\n        <h1>Win</h1>\n        <img\n          src={src}\n          alt=\"win\"\n        />\n      </div>\n    );\n  }\n  return (\n    <div className={style.div}>\n      <h1>{allMistakes === 1 ? `${allMistakes} mistake` : `${allMistakes} mistakes`}</h1>\n      <img src={src} alt=\"\" />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ data }: Record<string, StateInterface>) => ({\n  allMistakes: getAllMistakes(data),\n});\n\nexport default connect(mapStateToProps)(WindowAfterGame);\n","import React, { useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport {\n  finishGame, openWindowAfterGame, selectCategory, setRandomWordOrder, startGame, StateInterface,\n} from '../../reducers/state';\nimport {\n  getCurrentWord, getStart, getStatusGame, getWindowAfterGame, getWords,\n} from '../../selectors';\nimport { createRandowWordOrder, sound } from '../../utills';\nimport style from './style.module.css';\nimport Card from './Card';\nimport Rating from './Rating';\nimport ModalAfterGame from './ModalAfterGame';\n\ninterface MyInterface {\n    words: Record<string, Record<string, string>>,\n    game: boolean,\n    start: boolean,\n    startBtn: Function,\n    currentWord: string,\n    setWordOrder: Function,\n    finish: Function,\n    windowAfterGame: boolean,\n    openWinModal: Function,\n    setCategory: Function\n}\n\nexport type wordInterface = [string, {[key: string]: string}]\n\nconst CategoryPage = ({\n  words,\n  game,\n  start,\n  startBtn,\n  currentWord, setWordOrder, finish, windowAfterGame, openWinModal, setCategory,\n}: MyInterface) => {\n  useEffect(() => {\n    if (currentWord === undefined) {\n      setTimeout(openWinModal, 1000);\n      setTimeout(() => { finish(); setCategory(''); }, 3000);\n    }\n  });\n  if (words) {\n    const englishWords = Object.entries(words);\n    const order = createRandowWordOrder(englishWords);\n    if (windowAfterGame) {\n      return <ModalAfterGame />;\n    }\n    return (\n      <div>\n        <Rating />\n        <div className={style.cards}>\n          {englishWords.map((word: wordInterface) => {\n            const englishWord = {\n              word: word[0],\n              logo: word[1].logo,\n              translation: word[1].translate,\n            };\n            return <Card key={englishWord.word} {...englishWord} />;\n          })}\n        </div>\n        {game ? (\n          <div className={style.btns}>\n            <button\n              aria-hidden=\"true\"\n              type=\"button\"\n              onClick={start ? () => sound(currentWord)\n                : () => { startBtn(); setWordOrder(order); sound(order[0]); }}\n              className={start ? `${style.startBtn} ${style.repeat}` : style.startBtn}\n            >\n              start game\n            </button>\n          </div>\n        ) : ''}\n      </div>\n\n    );\n  }\n  return <Redirect to=\"/\" />;\n};\n\nconst mapStateToProps = ({ data }: Record<string, StateInterface>) => ({\n  words: getWords(data),\n  game: getStatusGame(data),\n  start: getStart(data),\n  currentWord: getCurrentWord(data),\n  windowAfterGame: getWindowAfterGame(data),\n});\nconst mapDispatchToProps = {\n  setCategory: selectCategory,\n  startBtn: startGame,\n  setWordOrder: setRandomWordOrder,\n  finish: finishGame,\n  openWinModal: openWindowAfterGame,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { selectCategory, StateInterface } from '../../../reducers/state';\nimport { createData } from '../../../reducers/statistics';\nimport { getAllWords, getStatusGame } from '../../../selectors';\nimport style from './style.module.css';\n\ninterface MyInterface {\n    category: string,\n    logo: string,\n    game: boolean,\n    setCategory: Function,\n    create: Function,\n    allWords: Record<string, Record<string, Record<string, string>>>\n}\n\nconst MainCard = ({\n  category, logo, game, setCategory, create,\n  allWords,\n}: MyInterface) => {\n  const background = {\n    background: game ? 'linear-gradient(180deg,#fd6a63,#feb46b 40%,#fff 0,#fff)'\n      : 'linear-gradient(180deg, #0099ae,#00bf82 40%, white 40%)',\n  };\n  return (\n    <Link\n      style={background}\n      onClick={() => { setCategory(category); create(allWords); }}\n      to={`/category/${category}`}\n      className={style.card}\n    >\n      <img src={logo} alt={category} />\n      {category}\n    </Link>\n  );\n};\n\nconst mapStateToProps = ({ data }: Record<string, StateInterface>) => ({\n  game: getStatusGame(data),\n  allWords: getAllWords(data),\n});\nconst mapDispatchToProps = {\n  setCategory: selectCategory,\n  create: createData,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainCard);\n","import React, { useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport { resetCurrentCategory, StateInterface } from '../../reducers/state';\nimport { getCategories } from '../../selectors';\nimport style from './style.module.css';\nimport MainCard from './Card';\n\ninterface MyInterface {\n    categories: Array<Record<string, string>>,\n    resetCategory: Function\n}\n\nconst MainPage = ({ categories, resetCategory }: MyInterface) => {\n  useEffect(() => resetCategory());\n\n  return (\n    <main>\n      <div className={style.cards}>\n        {categories.map((category) => <MainCard key={category.category} category=\"\" logo=\"\" {...category} />)}\n      </div>\n    </main>\n  );\n};\n\nconst mapStateToProps = ({ data }: Record<string, StateInterface>) => ({\n  categories: getCategories(data),\n});\nconst mapDispatchToProps = {\n  resetCategory: resetCurrentCategory,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\n","import React from 'react';\n\nconst StatisticRow = ({\n  word, translation, category, clicks, correct, wrong, percent,\n}: Record<string, string | number>) => (\n  <tr>\n    <td>{word}</td>\n    <td>{translation}</td>\n    <td>{category}</td>\n    <td>{clicks}</td>\n    <td>{correct}</td>\n    <td>{wrong}</td>\n    <td>{percent}</td>\n  </tr>\n);\n\nexport default StatisticRow;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setSortType, StatisticsInterface } from '../../../reducers/statistics';\nimport { getOrder, getSortType } from '../../../selectors';\nimport style from './style.module.css';\n\ninterface MyInterface {\n    button: string,\n    order: string,\n    setType: Function,\n    sortType: string\n}\n\nconst StatisticHeader = ({\n  button, order, setType, sortType,\n}: MyInterface) => {\n  let header = button;\n  if (button === 'percent') {\n    header = '% errors';\n  }\n  const text = order === 'ASC' ? `↓ ${header}` : `↑ ${header}`;\n  return (\n    <td aria-hidden=\"true\" className={style.sort} onClick={() => setType(button)}>{sortType === button ? text : header}</td>\n  );\n};\n\nconst mapStateToProps = ({ statistics }: Record<string, StatisticsInterface>) => ({\n  order: getOrder(statistics),\n  sortType: getSortType(statistics),\n});\nconst mapDispatchToProps = {\n  setType: setSortType,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatisticHeader);\n","import { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport React, { FunctionComponent } from 'react';\nimport { getButtons, getStatusGame, getWordsForStatistics } from '../../selectors';\nimport style from './style.module.css';\nimport { resetWords, StatisticsInterface } from '../../reducers/statistics';\nimport { createDifficultWords, selectCategory, StateInterface } from '../../reducers/state';\nimport StatisticRow from './StatisticRow';\nimport StatisticHeader from './StatisticHeader';\n\ninterface MyInterface {\n    words: Array<Record<string, string | number>>,\n    buttons: Array<string>,\n    game: boolean,\n    reset: Function,\n    createWords: Function,\n    setCategory: Function\n}\n\nconst StatisticsPage = ({\n  words, buttons, game, reset, createWords, setCategory,\n}: MyInterface) => {\n  const background = {\n    background: game ? 'linear-gradient(-90deg,#fd6a63,#feb46b)' : 'linear-gradient(-90deg, #0099ae,#00bf82)',\n    boxShadow: game ? '3px 3px 15px 2px rgb(138 83 0 / 25%), -3px -3px 15px 2px rgb(138 83 0 / 22%)'\n      : '3px 3px 15px 2px rgb(0 169 130 / 25%), -3px -3px 15px 2px rgb(0 169 130 / 25%)',\n  };\n  if (words.length === 0) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className={style.wrapper}>\n      <div className={style.buttons}>\n        <Link\n          onClick={() => { createWords(words); setCategory('Difficult Words'); }}\n          to=\"/category/Difficult Words\"\n          style={background}\n          className={style.repeat}\n        >\n          repeat difficult words\n        </Link>\n        <button type=\"button\" onClick={() => reset()} style={background} className={style.reset}>reset</button>\n      </div>\n      <table style={{ boxShadow: background.boxShadow }} className={style.statistics}>\n        <caption style={background}>Cards</caption>\n        <thead>\n          <tr className={style.row}>\n            {buttons.map((button) => <StatisticHeader key={button} button={button} />)}\n          </tr>\n        </thead>\n        <tbody>\n          {words.map((item) => <StatisticRow key={item.word} {...item} />)}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\ninterface Props {\n  data: StateInterface,\n  statistics: StatisticsInterface\n}\n\nconst mapStateToProps = ({ data, statistics }: Props) => ({\n  words: getWordsForStatistics(statistics),\n  buttons: getButtons(statistics),\n  game: getStatusGame(data),\n});\nconst mapDispatchToProps = {\n  reset: resetWords,\n  createWords: createDifficultWords,\n  setCategory: selectCategory,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatisticsPage as FunctionComponent);\n","import { Switch, Route } from 'react-router';\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport React, { FunctionComponent } from 'react';\nimport style from './style.module.css';\n\nimport Header from './components/Header';\nimport CategoryPage from './components/CategoryPage';\nimport MainPage from './components/MainPage';\nimport StatisticsPage from './components/StatisticsPage';\nimport { getModal } from './selectors';\nimport { closeModal, StateInterface } from './reducers/state';\n\ninterface MyInterface {\n  modal: string,\n  close: Function\n}\n\nconst App = ({ modal, close }: MyInterface) => {\n  function eventTarget(event: React.MouseEvent<Element, MouseEvent>) {\n    const { target } = event;\n    if (target) {\n      if ((target as HTMLElement).localName !== 'ul') {\n        close();\n      }\n    }\n  }\n  return (\n    <div\n      aria-hidden=\"true\"\n      onClick={modal ? (e: React.MouseEvent<Element, MouseEvent>) => eventTarget(e) : () => {}}\n      className={style.app}\n    >\n      <Header />\n      <Switch>\n        <Route path=\"/category/:name\" component={CategoryPage} />\n        <Route path=\"/statistics\" component={StatisticsPage} />\n        <Route path=\"/\" component={MainPage} />\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ data }: Record<string, StateInterface>) => ({\n  modal: getModal(data),\n});\nconst mapDispatchToProps = {\n  close: closeModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App as FunctionComponent);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport store, { history } from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__2Oyr-\",\"button\":\"style_button__1Llqo\",\"input\":\"style_input__2dczz\",\"buttonBack\":\"style_buttonBack__3VvuQ\",\"slider\":\"style_slider__2DaPq\",\"burger\":\"style_burger__2qj3E\",\"show\":\"style_show__2H-em\",\"first\":\"style_first__BTWJ3\",\"second\":\"style_second__3fDOt\",\"third\":\"style_third__2fg9b\",\"menu\":\"style_menu__3VBfH\",\"active\":\"style_active__1d7ja\"};"],"sourceRoot":""}