{"version":3,"sources":["components/Header/style.module.css","components/AdminPage/AdminWords/UpdateItem/style.module.css","components/AdminPage/AdminHeader/style.module.css","components/CategoryPage/Card/style.module.css","components/AdminPage/AdminCategories/UpdateItem/style.module.css","components/AdminPage/AdminCategories/Item/style.module.css","components/AdminPage/AdminWords/Item/style.module.css","components/LoginPage/LoginModal/style.module.css","components/StatisticsPage/style.module.css","components/CategoryPage/style.module.css","components/AdminPage/AdminWords/style.module.css","components/AdminPage/AdminCategories/style.module.css","components/LoginPage/style.module.css","components/CategoryPage/Rating/style.module.css","components/CategoryPage/ModalAfterGame/style.module.css","style.module.css","components/MainPage/style.module.css","components/MainPage/Card/style.module.css","components/StatisticsPage/StatisticHeader/style.module.css","api/index.ts","reducers/categories.ts","reducers/login.ts","utills/index.ts","reducers/state.ts","reducers/statistics.ts","reducers/words.ts","reducers/index.ts","store.ts","selectors/index.ts","components/LoginPage/LoginModal/index.tsx","components/LoginPage/index.tsx","components/Header/index.tsx","components/CategoryPage/Card/index.tsx","components/CategoryPage/Rating/index.tsx","components/CategoryPage/ModalAfterGame/index.tsx","components/CategoryPage/index.tsx","components/MainPage/Card/index.tsx","components/common/Preloader/index.tsx","components/MainPage/index.tsx","components/StatisticsPage/StatisticRow/index.tsx","components/StatisticsPage/StatisticHeader/index.tsx","components/StatisticsPage/index.tsx","components/AdminPage/AdminCategories/UpdateItem/index.tsx","components/AdminPage/AdminCategories/Item/index.tsx","components/AdminPage/AdminCategories/index.tsx","components/AdminPage/AdminHeader/index.tsx","components/AdminPage/AdminWords/UpdateItem/index.tsx","components/AdminPage/AdminWords/Item/index.tsx","components/AdminPage/AdminWords/index.tsx","components/AdminPage/index.tsx","App.tsx","index.tsx"],"names":["module","exports","url","getCategoriesAPI","a","fetch","response","json","getWordsAPI","categoryName","getAllWordsAPI","updateStatisticAPI","word","method","mode","headers","body","JSON","stringify","resetWordsAPI","getDifficultWordsAPI","getAuthAPI","createCategoryAPI","data","deleteCategoryAPI","name","toLowerCase","updateCategoryAPI","newName","deleteWordAPI","updateWordAPI","createWordAPI","GET_CATEGORIES_START","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAILURE","SELECT_CATEGORY","initialState","categories","currentCategory","loading","selectCategory","category","dispatch","type","payload","state","TOGGLE_LOGIN_MODAL","CLOSE_LOGIN_MODAL","SET_NAME","SET_PASSWORD","CHECK_ADMIN_START","CHECK_ADMIN_SUCCESS","CHECK_ADMIN_FAILURE","SET_CURRENT_CATEGORY","GET_CATEGORIES_ADMIN","CREATE_CATEGORY","NEW_CATEGORY","DELETE_NEW_CATEGORY","CREATE_NEW_CATEGORY_SUCCESS","DELETE_CATEGORY_SUCCESS","TOGGLE_UPDATE","UPDATE_CATEGORY","SET_WORDS","SET_WORD","SET_TRANSLATION","DELETE_WORD","SET_NEW_WORD","SET_PREV_DATA","UPDATE_WORD","CREATE_WORD","CREATE_WORD_FAILURE","SET_IMAGE","SET_SOUND","LOG_OUT","login","password","auth","create","newCategory","update","newWord","words","translation","logo","loginState","oldName","sound","closeLoginModal","setCurrentCategory","createCategory","toggleUpdate","setNewWord","soundPlay","event","undefined","length","audio","Audio","play","window","location","origin","target","getAttribute","createRandowWordOrder","order","max","Set","copyMax","min","size","num","Math","floor","random","add","randomWordOrder","result","forEach","push","percent","correct","wrong","toFixed","encodeImageFileAsURL","element","disp","files","file","reader","FileReader","onloadend","readAsDataURL","TOGGLE_GAME","SHOW_MODAL","RESET_CURRENT_CATEGORY","CLOSE_MODAL","START_GAME","FINISH_GAME","SET_RANDOM_WORD_ORDER","SET_CURRENT_WORD","NEXT_WORD","CHANGE_RATING","SET_MISTAKE","OPEN_WINDOW_AFTER_GAME","game","showModal","start","finish","currentWord","rating","allMistakes","windowAfterGame","currentNum","indexOf","nextWord","randowWordOrder","setTimeout","finishGame","GET_ALL_WORDS_START","GET_ALL_WORDS_SUCCESS","GET_ALL_WORDS_FAILURE","UPDATE_STATISTICS","SET_SORT_TYPE","RESET_WORDS","sortType","buttons","getAllWords","allWords","statistics","GET_WORDS_START","GET_WORDS_SUCCESS","GET_WORDS_FAILURE","GET_DIFFICULT_WORDS","getWords","createRootReducers","history","combineReducers","router","connectRouter","createBrowserHistory","basename","middlewares","thunk","routerMiddleware","store","createStore","composeWithDevTools","applyMiddleware","getCategories","getStatusGame","getCurrentCategory","getModal","getStart","getCurrentWord","getWordsForStatistics","sort","b","getOrder","getSortType","getLoading","getLogin","getPassword","getAuth","getCreate","getUpdate","getTranslation","getData","mapDispatchToProps","closeLoginModalD","seNameD","value","trim","setPasswordD","checkAdminD","connect","className","style","modal","onInput","e","placeholder","disabled","onClick","cancel","autorisation","toggleLoginModalD","from","to","wrapper","loginBtn","toggle","openModal","setCategory","getWordsD","show","burger","background","header","first","second","third","menu","active","map","LoginPage","htmlFor","button","id","onChange","input","checked","buttonBack","slider","setNextWord","setNewRating","addMistake","updateStatistic","updatingWords","item","clicks","find","backgroundImage","backgroundSize","backgroundPosition","startListener","classList","contains","inactive","console","log","card","front","display","cardHeader","back","parent","parentElement","previousElementSibling","setAttribute","addEventListener","rotate","stars","src","useEffect","div","alt","startBtn","setWordOrder","openWinModal","getWordsSelector","ModalAfterGame","cards","btns","repeat","Preloader","resetCategory","getCategoriesD","allCategories","getAllWordsD","getCategoriesSelector","StatisticRow","setType","text","reset","getDifficultWordsD","difficultWords","boxShadow","row","newCategoryD","val","deleteNewCategoryD","updateDispatch","title","deleteCategoryD","updateCategoryD","toggleUpdateD","setCurrentCategoryD","delete","createCategoryD","createNewCategoryD","field","plus","logOutD","link","logOut","setWordD","setTranslationD","setNewWordD","updateWordD","createWordD","setImageD","image","setSoundD","label","accept","controls","control","deleteWordD","setPrevDataD","change","setWordsD","exact","path","component","AdminCategories","AdminWords","close","localName","eventTarget","app","Header","AdminPage","CategoryPage","StatisticsPage","MainPage","ReactDOM","render","document","getElementById"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,OAAS,sBAAsB,OAAS,sBAAsB,MAAQ,qBAAqB,WAAa,0BAA0B,OAAS,sBAAsB,OAAS,sBAAsB,KAAO,oBAAoB,MAAQ,qBAAqB,OAAS,sBAAsB,MAAQ,qBAAqB,KAAO,oBAAoB,OAAS,wB,mBCA1WD,EAAOC,QAAU,CAAC,OAAS,sBAAsB,MAAQ,qBAAqB,MAAQ,qBAAqB,QAAU,uBAAuB,OAAS,sBAAsB,MAAQ,qBAAqB,SAAW,wBAAwB,QAAU,yB,mBCArPD,EAAOC,QAAU,CAAC,OAAS,sBAAsB,QAAU,uBAAuB,KAAO,oBAAoB,OAAS,sBAAsB,OAAS,wB,gBCArJD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,KAAO,oBAAoB,WAAa,0BAA0B,OAAS,sBAAsB,SAAW,wBAAwB,MAAQ,qBAAqB,QAAU,uBAAuB,MAAQ,uB,gBCApRD,EAAOC,QAAU,CAAC,OAAS,sBAAsB,QAAU,uBAAuB,OAAS,sBAAsB,MAAQ,qBAAqB,MAAQ,uB,gBCAtJD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,OAAS,sBAAsB,MAAQ,qBAAqB,OAAS,sBAAsB,QAAU,uBAAuB,OAAS,wB,gBCA1LD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,OAAS,sBAAsB,OAAS,wB,gBCAlHD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,MAAQ,qBAAqB,QAAU,uBAAuB,OAAS,sBAAsB,aAAe,8B,gBCA1LD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,QAAU,uBAAuB,MAAQ,qBAAqB,OAAS,sBAAsB,WAAa,0BAA0B,IAAM,qB,iBCA7LD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,SAAW,wBAAwB,OAAS,sBAAsB,MAAQ,qBAAqB,QAAU,uBAAuB,MAAQ,uB,gBCAlND,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,SAAW,wBAAwB,OAAS,sBAAsB,KAAO,oBAAoB,MAAQ,uB,kBCApJD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,OAAS,sBAAsB,KAAO,oBAAoB,MAAQ,uB,iBCA3HD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,QAAU,yB,oBCA/DD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,MAAQ,uB,gBCAxFD,EAAOC,QAAU,CAAC,IAAM,qB,sBCAxBD,EAAOC,QAAU,CAAC,IAAM,qB,gBCAxBD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,sB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB,uLCCnBC,EAAM,yBAEL,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACkBC,MAAMH,GADxB,cACCI,EADD,yBAEEA,EAASC,QAFX,4C,sBAKA,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,eAAAL,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,0BAAyBO,IADhD,cACCH,EADD,yBAEEA,EAASC,QAFX,4C,sBAKA,SAAeG,IAAtB,+B,4CAAO,4BAAAN,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,oBADvB,cACCI,EADD,yBAEEA,EAASC,QAFX,4C,sBAKA,SAAeI,EAAtB,kC,4CAAO,WAAkCC,GAAlC,eAAAR,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,mBAA0B,CACpDW,OAAQ,MACRC,KAAM,OACNC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,KALlB,cACCN,EADD,yBAOEA,EAASC,QAPX,4C,sBAUA,SAAeY,IAAtB,+B,4CAAO,4BAAAf,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,mBAA0B,CACpDW,OAAQ,WAFL,cACCP,EADD,yBAIEA,EAASC,QAJX,4C,sBAOA,SAAea,IAAtB,+B,4CAAO,4BAAAhB,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,mBADvB,cACCI,EADD,yBAEEA,EAASC,QAFX,4C,sBAKA,SAAec,IAAtB,+B,4CAAO,4BAAAjB,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,cADvB,cACCI,EADD,yBAEEA,EAASC,QAFX,4C,sBAKA,SAAee,EAAtB,kC,4CAAO,WAAiCC,GAAjC,eAAAnB,EAAA,sEACkBC,MAAMH,EAAK,CAChCW,OAAQ,OACRC,KAAM,OACNC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUK,KALlB,cACCjB,EADD,yBAOEA,EAASC,QAPX,4C,sBAUA,SAAeiB,EAAtB,kC,4CAAO,WAAiCC,GAAjC,eAAArB,EAAA,sEACkBC,MAAM,GAAD,OAAIH,GAAJ,OAAUuB,EAAKC,eAAiB,CAC1Db,OAAQ,WAFL,cACCP,EADD,yBAIEA,EAASC,QAJX,4C,sBAOA,SAAeoB,EAAtB,oC,4CAAO,WAAiCF,EAAcG,GAA/C,iBAAAxB,EAAA,6DACCmB,EAAO,CACXE,KAAMA,EAAKC,cACXE,QAASA,EAAQF,eAHd,SAKkBrB,MAAMH,EAAK,CAChCW,OAAQ,MACRC,KAAM,OACNC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUK,KATlB,cAKCjB,EALD,yBAWEA,EAASC,QAXX,4C,sBAcA,SAAesB,EAAtB,oC,4CAAO,WAA6BpB,EAAsBgB,GAAnD,eAAArB,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,0BAAyBO,EAAzB,YAAyCgB,GAAQ,CAC3EZ,OAAQ,WAFL,cACCP,EADD,yBAIEA,EAASC,QAJX,4C,sBAOA,SAAeuB,EAAtB,oC,4CAAO,WAA6BrB,EAAsBc,GAAnD,eAAAnB,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,0BAAyBO,GAAgB,CACnEI,OAAQ,MACRC,KAAM,OACNC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUK,KALlB,cACCjB,EADD,yBAOEA,EAASC,QAPX,4C,sBAUA,SAAewB,EAAtB,oC,4CAAO,WAA6BtB,EAAsBc,GAAnD,eAAAnB,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,0BAAyBO,GAAgB,CACnEI,OAAQ,OACRC,KAAM,OACNC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUK,KALlB,cACCjB,EADD,yBAOEA,EAASC,QAPX,4C,sBC1FP,IAAMyB,EAAuB,uBACvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAkB,kBAQlBC,EAAe,CACnBC,WAAY,GACZC,gBAAiB,GACjBC,SAAS,GAmCEC,EAAiB,SAACC,GAAD,OAAsB,SAACC,GACnDA,EAAS,CACPC,KAAMR,EACNS,QAASH,MAIEJ,EAvCI,WAAsE,IAArEQ,EAAoE,uDAA5DT,EAA4D,yCAA5CQ,EAA4C,EAA5CA,QAASD,EAAmC,EAAnCA,KACnD,OAAQA,GACN,KAAKX,EACH,OAAO,2BAAKa,GAAZ,IAAmBN,SAAS,IAC9B,KAAKN,EACH,OAAO,2BAAKY,GAAZ,IAAmBR,WAAYO,EAASL,SAAS,IACnD,KAAKL,EACH,OAAO,2BAAKW,GAAZ,IAAmBN,SAAS,IAC9B,KAAKJ,EACH,OAAO,2BAAKU,GAAZ,IAAmBP,gBAAiBM,IACtC,QACE,OAAOC,ICrBPC,EAAqB,qBACrBC,EAAoB,qBACpBC,EAAW,WACXC,GAAe,eACfC,GAAoB,oBACpBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAkB,kBAClBC,GAAe,eACfC,GAAsB,sBACtBC,GAA8B,8BAC9BC,GAA0B,0BAC1BC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAY,YACZC,GAAW,WACXC,GAAkB,kBAClBC,GAAc,cACdC,GAAe,eACfC,GAAgB,gBAChBC,GAAc,cACdC,GAAc,cACdC,GAAsB,sBACtBC,GAAY,YACZC,GAAY,YACZC,GAAU,UAkBVrC,GAAe,CACnBsC,OAAO,EACPjD,KAAM,GACNkD,SAAU,GACVpC,SAAS,EACTqC,MAAM,EACNtC,gBAAiB,GACjBD,WAAY,GACZwC,QAAQ,EACRC,YAAa,GACbC,QAAQ,EACRC,QAAS,GACTC,MAAO,GACP1D,KAAM,CACJE,KAAM,GACNyD,YAAa,GACbC,KAAM,KAIGC,GAAa,WAAsE,IAArEvC,EAAoE,uDAA5DT,GAA4D,yCAA5CQ,EAA4C,EAA5CA,QAASD,EAAmC,EAAnCA,KAC1D,OAAQA,GACN,KAAKG,EACH,OAAO,2BAAKD,GAAZ,IAAmB6B,OAAQ7B,EAAM6B,QACnC,KAAK3B,EACH,OAAO,2BAAKF,GAAZ,IAAmB6B,OAAO,IAC5B,KAAK1B,EACH,OAAO,2BAAKH,GAAZ,IAAmBpB,KAAMmB,IAC3B,KAAKK,GACH,OAAO,2BAAKJ,GAAZ,IAAmB8B,SAAU/B,IAC/B,KAAKM,GACH,OAAO,2BAAKL,GAAZ,IAAmBN,SAAS,IAC9B,KAAKY,GACH,OAAO,2BACFN,GADL,IACYN,SAAS,EAAOqC,MAAM,EAAMF,OAAO,IAEjD,KAAKtB,GACH,OAAO,2BACFP,GADL,IACYN,SAAS,EAAOmC,OAAO,IAErC,KAAKrB,GACH,OAAO,2BAAKR,GAAZ,IAAmBP,gBAAiBM,IACtC,KAAKU,GACH,OAAO,2BAAKT,GAAZ,IAAmBR,WAAYO,IACjC,KAAKW,GACH,OAAO,2BAAKV,GAAZ,IAAmBgC,QAAQ,EAAMtD,KAAM,CAAEE,KAAM,GAAI0D,KAAM,GAAID,YAAa,MAC5E,KAAK1B,GACH,OAAO,2BAAKX,GAAZ,IAAmBiC,YAAalC,IAClC,KAAKa,GACH,OAAO,2BACFZ,GADL,IACYiC,YAAa,GAAID,QAAQ,EAAOE,QAAQ,EAAOzC,gBAAiB,KAE9E,KAAKoB,GACH,OAAO,2BACFb,GADL,IACYR,WAAYO,EAASiC,QAAQ,EAAOC,YAAa,KAE/D,KAAKnB,GACH,OAAO,2BAAKd,GAAZ,IAAmBR,WAAYO,IACjC,KAAKgB,GACH,OAAO,2BAAKf,GAAZ,IAAmBkC,QAASlC,EAAMkC,SACpC,KAAKlB,GACH,OAAO,2BACFhB,GADL,IACYkC,QAAQ,EAAO1C,WAAYO,EAASkC,YAAa,GAAIxC,gBAAiB,KAEpF,KAAKwB,GACL,KAAKG,GACL,KAAKG,GACL,KAAKC,GACH,OAAO,2BAAKxB,GAAZ,IAAmBoC,MAAOrC,EAASiC,QAAQ,IAC7C,KAAKd,GACH,OAAO,2BAAKlB,GAAZ,IAAmBtB,KAAK,2BAAMsB,EAAMtB,MAAb,IAAmBE,KAAMmB,EAAQlB,kBAC1D,KAAKsC,GACH,OAAO,2BAAKnB,GAAZ,IAAmBtB,KAAK,2BAAMsB,EAAMtB,MAAb,IAAmB2D,YAAatC,EAAQlB,kBACjE,KAAKwC,GACH,OAAO,2BAAKrB,GAAZ,IAAmBmC,QAASpC,EAASrB,KAAK,2BAAMsB,EAAMtB,MAAb,IAAmB8D,QAASzC,MACvE,KAAKuB,GACH,OAAO,2BAAKtB,GAAZ,IAAmBtB,KAAMqB,IAC3B,KAAK0B,GACH,OAAO,2BAAKzB,GAAZ,IAAmBgC,QAAQ,IAC7B,KAAKN,GACH,OAAO,2BAAK1B,GAAZ,IAAmBtB,KAAK,2BAAMsB,EAAMtB,MAAb,IAAmB4D,KAAMvC,MAClD,KAAK4B,GACH,OAAO,2BAAK3B,GAAZ,IAAmBtB,KAAK,2BAAMsB,EAAMtB,MAAb,IAAmB+D,MAAO1C,MACnD,KAAK6B,GACH,OAAO,2BAAK5B,GAAZ,IAAmB+B,MAAM,IAC3B,QACE,OAAO/B,IAUA0C,GAAkB,kBAAM,SAAC7C,GACpCA,EAAS,CACPC,KAAMI,MAwCGyC,GAAqB,SAAC/D,GAAD,OAAkB,SAACiB,GACnDA,EAAS,CACPC,KAAMU,GACNT,QAASnB,MAWAgE,GAAiB,kBAAM,SAAC/C,GACnCA,EAAS,CACPC,KAAMY,OAiEGmC,GAAe,kBAAM,SAAChD,GACjCA,EAAS,CACPC,KAAMiB,OAoCG+B,GAAa,SAACX,GAAD,OAAqB,SAACtC,GAC9CA,EAAS,CACPC,KAAMuB,GACNtB,QAASoC,M,SCxTN,SAASY,GAAUhF,GAAqF,IAAvEiF,EAAsE,4DAAXC,EACjG,QAAcA,IAAVD,EACF,GAAIjF,EAAKmF,OAAS,IAAK,CACrB,IAAMC,EAAQ,IAAIC,MAAJ,UAAarF,IAC3BoF,EAAME,WACD,CACL,IAAMF,EAAQ,IAAIC,MAAJ,UAAaE,OAAOC,SAASC,OAA7B,mCAA8DzF,EAA9D,SACdoF,EAAME,OAGV,QAAcJ,IAAVD,GAC8D,WAA3DA,EAAMS,OAAuBC,aAAa,cACgB,SAA3DV,EAAMS,OAAuBC,aAAa,aAC5C,GAAI3F,EAAKmF,OAAS,IAAK,CACrB,IAAMC,EAAQ,IAAIC,MAAJ,UAAarF,IAC3BoF,EAAME,WACD,CACL,IAAMF,EAAQ,IAAIC,MAAJ,UAAaE,OAAOC,SAASC,OAA7B,mCAA8DzF,EAA9D,SACdoF,EAAME,QAuBP,SAASM,GAAsBvB,GACpC,IAAMwB,EAlBR,SAAyBC,GAIvB,IAHA,IAAMD,EAAqB,IAAIE,IAC3BC,EAAUF,EACVG,EAAM,EACHJ,EAAMK,OAASJ,GAAK,CACzB,IAAMK,EAAMC,KAAKC,MAAMD,KAAKE,UAAYN,EAAUC,GAAOA,GACzDJ,EAAMU,IAAIJ,GACNL,IAAQK,IACVH,GAAW,GAETC,IAAQE,IACVF,GAAO,GAGX,OAAOJ,EAIOW,CAAgBnC,EAAMc,QAE9BsB,EAAwB,GAK9B,OAJAZ,EAAMa,SAAQ,SAACP,GACbM,EAAOE,KAAKtC,EAAM8B,GAAKtF,SAGlB4F,EAGF,SAASG,GAAQC,EAAiBC,GACvC,OAAc,IAAVA,EACK,EAG0B,MAA1BA,GADGD,EAAUC,IACAC,QAAQ,GAGzB,SAASC,GAAqBC,EAA2BC,GAC9D,GAAID,EAAQE,MAAO,CACjB,IAAMC,EAAOH,EAAQE,MAAM,GACrBE,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACjBL,EAAKG,EAAOZ,SAEdY,EAAOG,cAAcJ,ICpEzB,IAAMK,GAAc,cACdC,GAAa,aACbC,GAAyB,yBACzBC,GAAc,cACdC,GAAa,aACbC,GAAc,cACdC,GAAwB,wBACxBC,GAAmB,mBACnBC,GAAY,YACZC,GAAgB,gBAChBC,GAAc,cACdC,GAAyB,yBAczB5G,GAAe,CACnB6G,MAAM,EACNC,WAAW,EACXC,OAAO,EACPC,QAAQ,EACRC,YAAa,GACbjC,gBAAiB,GACjBkC,OAAQ,GACRC,YAAa,EACbC,iBAAiB,GAGNjI,GAAO,WAAsE,IAArEsB,EAAoE,uDAA5DT,GAA4D,yCAA5CO,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAC3C6G,EAAa5G,EAAMuE,gBAAgBsC,QAAQ7G,EAAMwG,aACjDM,EAAW9G,EAAMuE,gBAAgBqC,EAAa,GACpD,OAAQ9G,GACN,KAAK0F,GACH,OAAO,2BAAKxF,GAAZ,IAAmBoG,MAAOpG,EAAMoG,OAClC,KAAKX,GACH,OAAO,2BAAKzF,GAAZ,IAAmBqG,WAAYrG,EAAMqG,YACvC,KAAKX,GACH,OAAO,2BAAK1F,GAAZ,IAAmBP,gBAAiB,KACtC,KAAKkG,GACH,OAAO,2BAAK3F,GAAZ,IAAmBqG,WAAW,IAChC,KAAKT,GACH,OAAO,2BAAK5F,GAAZ,IAAmBsG,OAAO,IAC5B,KAAKT,GACH,OAAO,2BACF7F,GADL,IAEEsG,OAAO,EACPC,QAAQ,EACRE,OAAQ,GACRC,YAAa,EACbF,YAAa,GACbG,iBAAiB,EACjBI,gBAAiB,KAErB,KAAKjB,GACH,OAAO,2BAAK9F,GAAZ,IAAmBuE,gBAAiBxE,IACtC,KAAKgG,GACH,OAAO,2BAAK/F,GAAZ,IAAmBwG,YAAazG,IAClC,KAAKiG,GACH,YAAiB/C,IAAb6D,GACFE,YAAW,kBAAMjE,GAAU+D,KAAW,KAC/B,2BAAK9G,GAAZ,IAAmBwG,YAAaM,KAE3B,2BAAK9G,GAAZ,IAAmBwG,YAAa,QAClC,KAAKP,GACH,OAAO,2BAAKjG,GAAZ,IAAmByG,OAAO,GAAD,oBAAMzG,EAAMyG,QAAZ,CAAoB1G,MAC/C,KAAKmG,GACH,OAAO,2BAAKlG,GAAZ,IAAmB0G,YAAa1G,EAAM0G,YAAc,IACtD,KAAKP,GACH,OAAO,2BAAKnG,GAAZ,IAAmB2G,iBAAiB,IACtC,QACE,OAAO3G,IAkCAiH,GAAa,kBAAM,SAACpH,GAC/BA,EAAS,CACPC,KAAM+F,OCjHJqB,GAAsB,sBACtBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAoB,oBACpBC,GAAgB,gBAChBC,GAAc,cAUdhI,GAAe,CACnB6C,MAAO,GACPoF,SAAU,OACV5D,MAAO,MACP6D,QAAS,CAAC,OAAQ,cAAe,WAAY,SAAU,UAAW,QAAS,WAC3E/H,SAAS,GAwBEgI,GAAc,yDAAM,WAAO7H,GAAP,eAAAtC,EAAA,6DAC/BsC,EAAS,CACPC,KAAMoH,KAFuB,kBAKNrJ,IALM,OAKvB8J,EALuB,OAM7B9H,EAAS,CACPC,KAAMqH,GACNpH,QAAS4H,IARkB,gDAW7B9H,EAAS,CACPC,KAAMsH,KAZqB,yDAAN,uDAwDZQ,GA7EI,WAAsE,IAArE5H,EAAoE,uDAA5DT,GAA4D,yCAA5CO,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAChD,OAAQD,GACN,KAAKyH,GACL,KAAKF,GACH,OAAO,2BAAKrH,GAAZ,IAAmBoC,MAAOrC,IAC5B,KAAKuH,GACH,OAAItH,EAAMwH,WAAazH,EACE,QAAhBC,EAAM4D,MAAN,2BAA6B5D,GAA7B,IAAoC4D,MAAO,SAA3C,2BAA2D5D,GAA3D,IAAkE4D,MAAO,QAE3E,2BAAK5D,GAAZ,IAAmBwH,SAAUzH,EAAS6D,MAAO,QAC/C,KAAKsD,GACH,OAAO,2BAAKlH,GAAZ,IAAmBN,SAAS,IAC9B,KAAKyH,GACH,OAAO,2BAAKnH,GAAZ,IAAmBoC,MAAOrC,EAASL,SAAS,IAC9C,KAAK0H,GACH,OAAO,2BAAKpH,GAAZ,IAAmBN,SAAS,IAC9B,QACE,OAAOM,ICzCP6H,GAAkB,kBAClBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAsB,sBAOtBzI,GAAe,CACnB6C,MAAO,GACP1C,SAAS,GAkBEuI,GAAW,SAACrK,GAAD,8CAA0B,WAAOiC,GAAP,eAAAtC,EAAA,6DAChDsC,EAAS,CACPC,KAAM+H,KAFwC,kBAKvBlK,EAAYC,GALW,OAKxC+J,EALwC,OAM9C9H,EAAS,CACPC,KAAMgI,GACN/H,QAAS4H,IARmC,gDAW9C9H,EAAS,CACPC,KAAMiI,KAZsC,yDAA1B,uDAyBT3F,GAxCD,WAAsE,IAArEpC,EAAoE,uDAA5DT,GAA4D,yCAA5CQ,EAA4C,EAA5CA,QAASD,EAAmC,EAAnCA,KAC9C,OAAQA,GACN,KAAK+H,GACH,OAAO,2BAAK7H,GAAZ,IAAmBN,SAAS,IAC9B,KAAKoI,GACH,OAAO,2BAAK9H,GAAZ,IAAmBN,SAAS,EAAO0C,MAAOrC,IAC5C,KAAKgI,GACH,OAAO,2BAAK/H,GAAZ,IAAmBN,SAAS,IAC9B,KAAKsI,GACH,OAAO,2BAAKhI,GAAZ,IAAmBoC,MAAOrC,IAC5B,QACE,OAAOC,ICbEkI,GARY,SAACC,GAAD,OAA+BC,0BAAgB,CACxE1J,QACA0D,SACA5C,aACAoI,cACArF,cACA8F,OAAQC,YAAcH,MCRXA,GAAUI,YAAqB,CAAEC,SAAU,sBAElDC,GAAc,CAACC,IAAOC,YAAiBR,KAO9BS,GALDC,sBACZX,GAAmBC,IACnBW,8BAAoBC,kBAAe,WAAf,EAAmBN,M,6CCP5BO,GAAgB,SAAChJ,GAAD,OAAwCA,EAAMR,YAE9DyJ,GAAgB,SAACjJ,GAAD,OAA2BA,EAAMoG,MAEjD8C,GAAqB,SAAClJ,GAAD,OAAwCA,EAAMP,iBAEnE0J,GAAW,SAACnJ,GAAD,OAA2BA,EAAMqG,WAE5C4B,GAAW,SAACjI,GAAD,OAAyDA,EAAMoC,OAE1EgH,GAAW,SAACpJ,GAAD,OAA2BA,EAAMsG,OAE5C+C,GAAiB,SAACrJ,GAAD,OAA2BA,EAAMwG,aAQlD8C,GAAwB,SAAC,GAAqD,IAAnDlH,EAAkD,EAAlDA,MAAOoF,EAA2C,EAA3CA,SAAU5D,EAAiC,EAAjCA,MAUvD,OATAxB,EAAMmH,MAAK,SAAChM,EAAGiM,GACb,OAAc,QAAV5F,EAAkBrG,EAAEiK,GAAYgC,EAAEhC,GAAYjK,EAAEiK,GAAYgC,EAAEhC,IACzD,GAEK,QAAV5D,EAAkBrG,EAAEiK,GAAYgC,EAAEhC,GAAYjK,EAAEiK,GAAYgC,EAAEhC,KACxD,EAEH,KAEFpF,GAKIqH,GAAW,SAACzJ,GAAD,OAAgCA,EAAM4D,OAEjD8F,GAAc,SAAC1J,GAAD,OAAgCA,EAAMwH,UAEpDmC,GAAa,SAAC3J,GAAD,OAAwCA,EAAMN,SAE3DkK,GAAW,SAAC5J,GAAD,OAA2BA,EAAM6B,OAI5CgI,GAAc,SAAC7J,GAAD,OAA2BA,EAAM8B,UAE/CgI,GAAU,SAAC9J,GAAD,OAA2BA,EAAM+B,MAE3CgI,GAAY,SAAC/J,GAAD,OAA2BA,EAAMgC,QAI7CgI,GAAY,SAAChK,GAAD,OAA2BA,EAAMkC,QAQ7C+H,GAAiB,SAACjK,GAAD,OAA2BA,EAAMtB,KAAK2D,aAEvD6H,GAAU,SAAClK,GAAD,OAA2BA,EAAMtB,M,mECVlDyL,GAAqB,CACzBC,iBAAkB1H,GAClB2H,QRiGqB,SAACC,GAAD,OAAmB,SAACzK,GACzCA,EAAS,CACPC,KAAMK,EACNJ,QAASuK,EAAMC,WQnGjBC,aRuGyB,SAACF,GAAD,OAAmB,SAACzK,GAC7CA,EAAS,CACPC,KAAMM,GACNL,QAASuK,EAAMC,WQzGjBE,YR6GwB,SAAC7L,EAAckD,GAAf,8CAAoC,WAAOjC,GAAP,eAAAtC,EAAA,6DAC5DsC,EAAS,CACPC,KAAMO,KAFoD,kBAKvC7B,IALuC,QAKpDE,EALoD,QAMjDE,OAASA,GAAQF,EAAKoD,WAAaA,EAC1CjC,EAAS,CACPC,KAAMQ,KAGRT,EAAS,CACPC,KAAMS,KAZgD,gDAgB1DV,EAAS,CACPC,KAAMS,KAjBkD,yDAApC,wDQ1GXmK,gBAZS,SAAC,GAAD,IDLA1K,ECKGuC,EAAH,EAAGA,WAAH,MAAqD,CAC3E3D,MDNsBoB,ECMRuC,EDNkCvC,EAAMpB,MCOtDkD,SAAU+H,GAAYtH,GACtB7C,QAASiK,GAAWpH,MASkB4H,GAAzBO,EA5CI,SAAC,GAAD,IACjBN,EADiB,EACjBA,iBAAkBC,EADD,EACCA,QAASG,EADV,EACUA,aAAc5L,EADxB,EACwBA,KAAMkD,EAD9B,EAC8BA,SAAUpC,EADxC,EACwCA,QAAS+K,EADjD,EACiDA,YADjD,OAGjB,0BAASE,UAAWC,KAAMC,MAA1B,SACE,uBAAKF,UAAWC,KAAMtH,OAAtB,UACE,uBAAKqH,UAAWC,KAAM/I,MAAtB,UACE,wCACA,kCACE,wBAAOiJ,QAAS,SAACC,GAAD,OAAOV,EAASU,EAAEtH,OAA4B6G,QAAQxK,KAAK,OAAOkL,YAAY,QAAQV,MAAO1L,IAC7G,wBACEkM,QAAS,SAACC,GAAD,OAAOP,EAAcO,EAAEtH,OAA4B6G,QAC5DxK,KAAK,WACLkL,YAAY,WACZV,MAAOxI,UAIb,uBAAK6I,UAAWC,KAAMnD,QAAtB,UACE,yBAAQwD,SAAUvL,EAASwL,QAAS,kBAAMd,KAAoBtK,KAAK,SAAS6K,UAAWC,KAAMO,OAA7F,oBACA,yBACEF,SAAUvL,EACVwL,QAAS,kBAAMT,EAAY7L,EAAMkD,IACjChC,KAAK,SACL6K,UAAWC,KAAMQ,aAJnB,8BCJFjB,GAAqB,CACzBkB,kBT4G8B,kBAAM,SAACxL,GACrCA,EAAS,CACPC,KAAMG,OS3GKyK,gBARS,SAAC,GAAD,IAAGnI,EAAH,EAAGA,WAAH,MAAqD,CAC3EV,MAAO+H,GAASrH,GAChBR,KAAM+H,GAAQvH,MAMwB4H,GAAzBO,EA3BD,SAAC,GAA+C,IAA7C7I,EAA4C,EAA5CA,MAAOwJ,EAAqC,EAArCA,kBACtB,OAD2D,EAAlBtJ,KAEhC,eAAC,KAAD,CAAUuJ,KAAK,IAAIC,GAAG,WAE3B1J,EAEA,uBAAK8I,UAAWC,KAAMY,QAAtB,UACE,yBAAQb,UAAWC,KAAMa,SAAU3L,KAAK,SAAS,cAAY,OAA7D,mBACA,eAAC,GAAD,OAOJ,yBAAQ6K,UAAWC,KAAMa,SAAUP,QAAS,kBAAMG,KAAqBvL,KAAK,SAA5E,sBCkEEqK,GAAqB,CACzBuB,ORVwB,kBAAM,SAAC7L,GAC/BA,EAAS,CACPC,KAAM0F,OQSRmG,URLuB,kBAAM,SAAC9L,GAC9BA,EAAS,CACPC,KAAM2F,OQIRmG,YAAajM,EACb4G,OAAQU,GACR4E,UAAW5D,IAEEyC,gBAbS,SAAC,GAAD,IAAGhM,EAAH,EAAGA,KAAMc,EAAT,EAASA,WAAT,MAAkC,CACxD4G,KAAM6C,GAAcvK,GACpBmM,MAAO1B,GAASzK,GAChBc,WAAYwJ,GAAcxJ,GAC1BC,gBAAiByJ,GAAmB1J,MASE2K,GAAzBO,EA5EA,SAAC,GAIQ,IAHtBtE,EAGqB,EAHrBA,KACAsF,EAEqB,EAFrBA,OACAC,EACqB,EADrBA,UAAWd,EACU,EADVA,MAAOrL,EACG,EADHA,WAAYC,EACT,EADSA,gBAAiBmM,EAC1B,EAD0BA,YAAarF,EACvC,EADuCA,OAAQsF,EAC/C,EAD+CA,UAE9DC,EAAI,UAAMlB,KAAMmB,OAAZ,YAAsBnB,KAAMkB,MAChCE,EAAa,CACjBA,WAAY5F,EAAO,0CAA4C,4CAEjE,OACE,0BAAQuE,UAAWC,KAAMqB,OAAzB,UACE,uBAAK,cAAY,OAAOf,QAAS,kBAAMS,KAAahB,UAAWE,EAAQiB,EAAOlB,KAAMmB,OAApF,UACE,sBAAKpB,UAAWC,KAAMsB,QACtB,sBAAKvB,UAAWC,KAAMuB,SACtB,sBAAKxB,UAAWC,KAAMwB,WAExB,sBAAIxB,MAAOoB,EAAYrB,UAAWE,EAAK,UAAMD,KAAMyB,KAAZ,YAAoBzB,KAAMkB,MAASlB,KAAMyB,KAAhF,UACE,eAAC,KAAD,CACEnB,QAAS,WAAQ3E,IAAUqF,EAAY,KACvCL,GAAG,IACHZ,UAAYlL,EAAiC,GAAfmL,KAAM0B,OAHtC,uBAOC9M,EAAW+M,KAAI,gBAAG3N,EAAH,EAAGA,KAAH,OACd,eAAC,KAAD,CAEEsM,QAAS,WAAQU,EAAYhN,GAAO2H,IAAUsF,EAAUjN,IACxD2M,GAAE,oBAAe3M,GACjB+L,UAAWlL,IAAoBb,EAAOgM,KAAM0B,OAAS,GAJvD,SAMG1N,GALIA,MAQT,eAAC,KAAD,CACEsM,QAAS,WAAQU,EAAY,cAAerF,KAC5CgF,GAAG,cACHZ,UAA+B,eAApBlL,EAAmCmL,KAAM0B,OAAS,GAH/D,6BAOA,eAACE,GAAD,OAEF,yBAAOC,QAAQ,SAAS9B,UAAWC,KAAM8B,OAAzC,UACE,wBACEC,GAAG,SACHC,SAAUxG,EAAO,kBAAMsF,KAAW,WAAQA,IAAUzE,MACpDnH,KAAK,WACL6K,UAAWC,KAAMiC,MACjBC,QAAS1G,IAEX,uBAAMuE,UAAWC,KAAMmC,WAAY,YAAW3G,EAAO,OAAS,UAC9D,uBAAMuE,UAAWC,KAAMoC,kB,wCC8BzB7C,GAAqB,CACzB8C,YT0BsB,kBAAM,SAACpN,GAC7BA,EAAS,CACPC,KAAMkG,OS3BRkH,aT+B0B,SAACpN,GAAD,OAAkB,SAACD,GAC7CA,EAAS,CACPC,KAAMmG,GACNlG,QAASD,MSjCXqN,WTqCwB,kBAAM,SAACtN,GAC/BA,EAAS,CACPC,KAAMoG,OStCRkH,gBR9C8B,SAAChL,EAAetC,EAAclB,GAA9B,8CAA+C,WAAOiB,GAAP,iBAAAtC,EAAA,yDACvE8P,EAAgBjL,EAAMmK,KAAI,SAACe,GAC/B,GAAIA,EAAK1O,OAASA,EAChB,OAAQkB,GACN,IAAK,SACH,OAAO,2BAAKwN,GAAZ,IAAkBC,OAAQD,EAAKC,OAAS,IAC1C,IAAK,UACH,OAAO,2BAAKD,GAAZ,IAAkB1I,QAAS0I,EAAK1I,QAAU,EAAGD,QAASA,GAAQ2I,EAAK1I,QAAU,EAAG0I,EAAKzI,SACvF,IAAK,QACH,OAAO,2BAAKyI,GAAZ,IAAkBzI,MAAOyI,EAAKzI,MAAQ,EAAGF,QAASA,GAAQ2I,EAAK1I,QAAS0I,EAAKzI,MAAQ,KACvF,QACE,OAAOyI,EAGb,OAAOA,OAEH9G,EAAc6G,EAAcG,MAAK,SAACzP,GAAD,OAAUA,EAAKa,OAASA,MAhBc,6BAkB3EiB,EAlB2E,KAmBnEwH,GAnBmE,SAoB1DvJ,EAAmB0I,GApBuC,yBAmBzE1G,KAnByE,KAoBzEC,QApByE,iEAA/C,wDQiDjB2K,gBAbS,SAAC,GAAD,IAAGhM,EAAH,EAAGA,KAAMkJ,EAAT,EAASA,WAAT,MAAkC,CACxDxB,KAAM6C,GAAcvK,GACpB4H,MAAO8C,GAAS1K,GAChB8H,YAAa6C,GAAe3K,GAC5B0D,MAAO6F,GAASL,MASsBuC,GAAzBO,EAvFF,SAAC,GAKM,IAJlBrI,EAIiB,EAJjBA,YACAI,EAGiB,EAHjBA,MACAH,EAEiB,EAFjBA,KAAM1D,EAEW,EAFXA,KAAMwH,EAEK,EAFLA,KAAME,EAED,EAFCA,MAAOE,EAER,EAFQA,YAAayG,EAErB,EAFqBA,YAAaC,EAElC,EAFkCA,aAAcC,EAEhD,EAFgDA,WAAYC,EAE5D,EAF4DA,gBAC7EhL,EACiB,EADjBA,MAkBA,IAAM4J,EAAa,CACjByB,gBAAgB,OAAD,OAASnL,EAAT,KACfoL,eAAiBtH,EAAmB,QAAZ,UACxBuH,mBAAqBvH,EAAY,MAAL,IAExBwH,EAAgBtH,EAAQ,SAACyE,GArB/B,IAAmB/H,KAqBmE+H,GApBxEtH,OAAuBoK,UAAUC,SAASlD,KAAMmD,YACtDvH,IAAgB5H,GAClBqO,IACAG,EAAgBhL,EAAO,UAAWoE,GAClC0G,EAAa,WACZlK,EAAMS,OAAuBoK,UAAUvJ,IAAIsG,KAAMmD,UAClDhL,GAAU,aAEVqK,EAAgBhL,EAAO,QAASoE,GAChC0G,EAAa,SACbC,IACApK,GAAU,YAS2E,aAC3F,OACE,uBACE,cAAY,OACZmI,QAAS9E,EAAO,SAAC2E,GAAD,OAA8C6C,EAAc7C,IACxE,SAACA,GACDiD,QAAQC,IAAIxL,GAEVM,GADEN,GAGQ7D,EAFOmM,GAInBqC,EAAgBhL,EAAO,SAAUxD,IAErC+L,UAAWC,KAAMsD,KAZnB,UAcE,sBAAKvD,UAAWC,KAAMuD,MAAOvD,MAAOoB,EAApC,SACE,sBAAKpB,MAAO,CAAEwD,QAAUhI,EAAiB,OAAV,SAAoBuE,UAAWC,KAAMyD,WAApE,SAAiFzP,MAEnF,sBAAK,YAAU,OAAO+L,UAAWC,KAAM0D,KAAM1D,MAAOoB,EAApD,SACE,sBAAKpB,MAAO,CAAEwD,QAAUhI,EAAiB,OAAV,SAAoBuE,UAAWC,KAAMyD,WAApE,SAAiFhM,MAEnF,sBACE,cAAY,OACZ6I,QAAS,SAAClI,GACR,IAAMuL,EAAUvL,EAAMS,OAAuB+K,cACvCF,EAAQtL,EAAMS,OAAuBgL,uBACvCF,GAAUD,IACZC,EAAOG,aAAa,QAAS,8BAC7BJ,EAAKK,iBAAiB,YAAY,WAChCJ,EAAOG,aAAa,QAAS,iCAInC/D,UAAWC,KAAMgE,OACjB,YAAU,SACVhE,MAAO,CAAEwD,QAAUhI,EAAiB,OAAV,iB,oBCvEnBsE,gBAJS,SAAC,GAAD,ILME1K,EKNCtB,EAAH,EAAGA,KAAH,MAA+C,CACrE+H,QLKwBzG,EKLNtB,ELKgCsB,EAAMyG,WKF3CiE,EAVA,SAAC,GAAD,IAAGjE,EAAH,EAAGA,OAAH,OACb,sBAAKkE,UAAWC,KAAMiE,MAAtB,SACGpI,EAAO8F,KAAI,SAACzM,GAAD,OAAU,sBAAK6K,UAAWC,KAAM9K,a,oBCiCjC4K,gBAJS,SAAC,GAAD,INjBO1K,EMiBJtB,EAAH,EAAGA,KAAH,MAA+C,CACrEgI,aNlB6B1G,EMkBDtB,ENlB2BsB,EAAM0G,gBMqBhDgE,EAlCS,SAAC,GAAkC,IAAhChE,EAA+B,EAA/BA,YACnBoI,EAAsB,IAAhBpI,EACR,yHACA,yHAQJ,OAPAqI,qBAAU,WAENhM,GADkB,IAAhB2D,EACQ,MAEA,WAGTA,EAYH,uBAAKiE,UAAWC,KAAMoE,IAAtB,UACE,8BAAK,UAAuBtI,EAAP,IAAhBA,EAAA,0BACL,sBAAKoI,IAAKA,EAAKG,IAAI,QAZnB,uBAAKtE,UAAWC,KAAMoE,IAAtB,UACE,sCACA,sBACEF,IAAKA,EACLG,IAAI,cCsER9E,GAAqB,CACzByB,YAAajM,EACbuP,SZUuB,kBAAM,SAACrP,GAC9BA,EAAS,CACPC,KAAM8F,OYXRuJ,aZ0BgC,SAACvL,GAAD,OAA0B,SAAC/D,GALtC,IAAC9B,EAMtB8B,GANsB9B,EAME6F,EAAM,GANU,CACxC9D,KAAMiG,GACNhG,QAAShC,KAKT8B,EAAS,CACPC,KAAMgG,GACN/F,QAAS6D,MY7BX2C,OAAQU,GACRmI,aZmDiC,kBAAM,SAACvP,GACxCA,EAAS,CACPC,KAAMqG,QYlDKuE,gBAhBS,SAAC,GAAD,IPtEW1K,EOsERtB,EAAH,EAAGA,KAAMc,EAAT,EAASA,WAAY4C,EAArB,EAAqBA,MAArB,MAAyC,CAC/D3C,gBAAiByJ,GAAmB1J,GACpC4C,MAAOiN,GAAiBjN,GACxBgE,KAAM6C,GAAcvK,GACpB4H,MAAO8C,GAAS1K,GAChB8H,YAAa6C,GAAe3K,GAC5BiI,iBP5EiC3G,EO4EGtB,EP5EuBsB,EAAM2G,oBOsF3BwD,GAAzBO,EArEM,SAAC,GAOM,IAN1BtI,EAMyB,EANzBA,MACAgE,EAKyB,EALzBA,KACAE,EAIyB,EAJzBA,MACA4I,EAGyB,EAHzBA,SACA1I,EAEyB,EAFzBA,YAAa2I,EAEY,EAFZA,aAAc5I,EAEF,EAFEA,OAAQI,EAEV,EAFUA,gBAAiByI,EAE3B,EAF2BA,aAAcxD,EAEzC,EAFyCA,YAClEnM,EACyB,EADzBA,gBASA,GAPAsP,qBAAU,WACY,QAAhBvI,IACFQ,WAAWoI,EAAc,KACzBpI,YAAW,WAAQT,IAAUqF,EAAY,MAAQ,SAGrDoC,QAAQC,IAAI7L,GACY,KAApB3C,EACF,OAAO,eAAC,KAAD,CAAU6L,KAAK,YAAYC,GAAG,MAGvC,IAAM3H,EAAQD,GAAsBvB,GACpC,OAAIuE,EACK,eAAC2I,GAAD,IAGP,iCACE,eAAC,GAAD,IACA,sBAAK3E,UAAWC,KAAM2E,MAAtB,SACGnN,EAAMmK,KAAI,SAACxO,GAAD,OAAgB,eAAC,GAAD,eAA0BA,GAAfA,EAAKa,WAE5CwH,EACC,sBAAKuE,UAAWC,KAAM4E,KAAtB,SACE,yBACE,cAAY,OACZ1P,KAAK,SACLoL,QAAS5E,EAAQ,kBAAMvD,GAAUyD,IAC7B,WAAQ0I,IAAYC,EAAavL,GAAQb,GAAUa,EAAM,KAC7D+G,UAAWrE,EAAK,UAAMsE,KAAMsE,SAAZ,YAAwBtE,KAAM6E,QAAW7E,KAAMsE,SALjE,0BAUA,S,wCClCJ/E,GAAqB,CACzByB,YAAajM,EACbkM,UAAW5D,IAGEyC,gBARS,SAAC,GAAD,IAAGhM,EAAH,EAAGA,KAAH,MAAsB,CAC5C0H,KAAM6C,GAAcvK,MAOkByL,GAAzBO,EAhCE,SAAC,GAEE,IADlB9L,EACiB,EADjBA,KAAM0D,EACW,EADXA,KAAM8D,EACK,EADLA,KAAMwF,EACD,EADCA,YAAaC,EACd,EADcA,UAEzBG,EAAa,CACjBA,WAAY5F,EAAO,0DACf,2DAEN,OACE,gBAAC,KAAD,CACEwE,MAAOoB,EACPd,QAAS,WAAQU,EAAYhN,GAAOiN,EAAUjN,IAC9C2M,GAAE,oBAAe3M,GACjB+L,UAAWC,KAAMsD,KAJnB,UAME,sBAAKY,IAAKxM,EAAM2M,IAAKrQ,IACpBA,QC1BQ8Q,GAJG,kBAChB,8CCoCIvF,GAAqB,CACzBwF,cf0DkC,kBAAM,SAAC9P,GACzCA,EAAS,CACPC,KAAM4F,Oe3DRkK,elBL2B,yDAAM,WAAO/P,GAAP,eAAAtC,EAAA,6DACjCsC,EAAS,CACPC,KAAMX,IAFyB,kBAKH7B,IALG,OAKzBuS,EALyB,OAM/BhQ,EAAS,CACPC,KAAMV,EACNW,QAAS8P,IARoB,gDAW/BhQ,EAAS,CACPC,KAAMT,IAZuB,yDAAN,uDkBM3ByQ,aAAcpI,IAGDgD,gBAVS,SAAC,GAAD,IAAGlL,EAAH,EAAGA,WAAH,MAAiD,CACvEA,WAAYuQ,GAAsBvQ,GAClCE,QAASiK,GAAWnK,MAQkB2K,GAAzBO,EA1BE,SAAC,GAEI,IADpBlL,EACmB,EADnBA,WAAYmQ,EACO,EADPA,cAAeC,EACR,EADQA,eAAgBlQ,EACxB,EADwBA,QAASoQ,EACjC,EADiCA,aAGpD,OADAf,qBAAU,WAAQY,IAAiBC,IAAkBE,MAAmB,IACpEpQ,EACK,eAAC,GAAD,IAGP,gCACE,sBAAKiL,UAAWC,KAAM2E,MAAtB,SACG/P,EAAW+M,KAAI,SAAC3M,GAAD,OAAc,eAAC,GAAD,CAA8BhB,KAAMgB,EAAShB,KAAM0D,KAAM1C,EAAS0C,MAAnD1C,EAAShB,gB,oBCb/CoR,GAdM,SAAC,GAAD,IACnBpR,EADmB,EACnBA,KAAMyD,EADa,EACbA,YAAazC,EADA,EACAA,SAAU2N,EADV,EACUA,OAAQ3I,EADlB,EACkBA,QAASC,EAD3B,EAC2BA,MAAOF,EADlC,EACkCA,QADlC,OAGnB,gCACE,8BAAK/F,IACL,8BAAKyD,IACL,8BAAKzC,IACL,8BAAK2N,IACL,8BAAK3I,IACL,8BAAKC,IACL,8BAAKF,Q,oBCuBHwF,GAAqB,CACzB8F,QhBuDyB,SAAClS,GAAD,OAAkB,SAAC8B,GAC5CA,EAAS,CACPC,KAAMwH,GACNvH,QAAShC,OgBvDE2M,gBAPS,iBAAO,KAOSP,GAAzBO,EA3BS,SAAC,GAEL,IADlB9L,EACiB,EADjBA,KAAMgF,EACW,EADXA,MAAOqM,EACI,EADJA,QAASzI,EACL,EADKA,SAElByE,EAASrN,EACb,OAAQA,GACN,IAAK,UACHqN,EAAS,WACT,MACF,IAAK,OACHA,EAAS,OAKb,IAAMiE,EAAiB,QAAVtM,EAAA,iBAAuBqI,GAAvB,iBAAuCA,GACpD,OACE,qBAAI,cAAY,OAAOtB,UAAWC,KAAMrB,KAAM2B,QAAS,kBAAM+E,EAAQrR,IAArE,SAA6E4I,IAAa5I,EAAOsR,EAAOjE,OCkDtG9B,GAAqB,CACzBgG,MjBmBwB,yDAAM,WAAOtQ,GAAP,SAAAtC,EAAA,kEAC9BsC,EAD8B,KAEtB0H,GAFsB,SAGbjJ,IAHa,yBAE5BwB,KAF4B,KAG5BC,QAH4B,gEAAN,uDiBlBxBqQ,mBhB7B+B,yDAAM,WAAOvQ,GAAP,eAAAtC,EAAA,sEACRgB,IADQ,OAC/B8R,EAD+B,OAErCxQ,EAAS,CACPC,KAAMkI,GACNjI,QAASsQ,IAJ0B,2CAAN,uDgB8B/BzE,YAAajM,EACbmQ,aAAcpI,IAGDgD,gBAdS,SAAC,GAAD,IbhCG1K,EagCAtB,EAAH,EAAGA,KAAMkJ,EAAT,EAASA,WAAT,MAAkC,CACxDxF,MAAOkH,GAAsB1B,GAC7BH,SblCyBzH,EakCL4H,EblCoC5H,EAAMyH,SamC9DrB,KAAM6C,GAAcvK,GACpBkF,MAAO6F,GAAS7B,GAChBJ,SAAUkC,GAAY9B,MASgBuC,GAAzBO,EA3DQ,SAAC,GAEF,IADpBtI,EACmB,EADnBA,MAAOqF,EACY,EADZA,QAASrB,EACG,EADHA,KAAM+J,EACH,EADGA,MAAOC,EACV,EADUA,mBAAoBxE,EAC9B,EAD8BA,YAAakE,EAC3C,EAD2CA,aAActI,EACzD,EADyDA,SAAU5D,EACnE,EADmEA,MAEtFmL,qBAAU,kBAAMe,MAAgB,IAChC,IAAM9D,EAAa,CACjBA,WAAY5F,EAAO,0CAA4C,2CAC/DkK,UAAWlK,EAAO,+EACd,kFAEN,OAAqB,IAAjBhE,EAAMc,OACD,eAAC,KAAD,CAAUoI,KAAK,cAAcC,GAAG,MAGvC,uBAAKZ,UAAWC,KAAMY,QAAtB,UACE,uBAAKb,UAAWC,KAAMnD,QAAtB,UACE,eAAC,KAAD,CACEyD,QAAS,WAAQkF,IAAsBxE,EAAY,oBACnDL,GAAG,4BACHX,MAAOoB,EACPrB,UAAWC,KAAM6E,OAJnB,oCAQA,yBAAQ3P,KAAK,SAASoL,QAAS,kBAAMiF,KAASvF,MAAOoB,EAAYrB,UAAWC,KAAMuF,MAAlF,sBAEF,yBAAOvF,MAAO,CAAE0F,UAAWtE,EAAWsE,WAAa3F,UAAWC,KAAMhD,WAApE,UACE,0BAASgD,MAAOoB,EAAhB,mBACA,iCACE,qBAAIrB,UAAWC,KAAM2F,IAArB,SACG9I,EAAQ8E,KAAI,SAACG,GAAD,OAAY,eAAC,GAAD,CAA8B9N,KAAM8N,EAAQlF,SAAUA,EAAU5D,MAAOA,GAAjD8I,UAGnD,iCACGtK,EAAMmK,KAAI,SAACxO,GAAD,OAAU,eAAC,GAAD,eAAyCA,GAAtBA,EAAKsE,2B,oBCJjD8H,GAAqB,CACzBqG,arB8JyB,SAACC,GAAD,OAAiB,SAAC5Q,GAC3CA,EAAS,CACPC,KAAMa,GACNZ,QAAS0Q,MqBhKXC,mBrBoK+B,kBAAM,SAAC7Q,GACtCA,EAAS,CACPC,KAAMc,QqBnKK8J,gBAVS,SAAC,GAAD,IdOO1K,EcPJuC,EAAH,EAAGA,WAAH,MAAqD,CAC3E3E,cdM6BoC,EcNAuC,EdM0BvC,EAAMiC,acL7DC,OAAQ8H,GAAUzH,GAClBP,OAAQ+H,GAAUxH,MAOoB4H,GAAzBO,EA1CI,SAAC,GAAD,IACjB9L,EADiB,EACjBA,KAAMhB,EADW,EACXA,aAAc4S,EADH,EACGA,aAAcE,EADjB,EACiBA,mBAAoBC,EADrC,EACqCA,eAAgBzO,EADrD,EACqDA,OAAQF,EAD7D,EAC6DA,OAD7D,OAGjB,uBAAK2I,UAAS,UAAKC,KAAM5I,OAAX,YAAqB4I,KAAM3I,aAAzC,UACE,oBAAG0I,UAAWC,KAAMgG,MAApB,4BACA,wBACE9F,QAAS,SAACC,GAAD,OAAOyF,EAAczF,EAAEtH,OAA4B6G,QAC5DqC,GAAG,QACHhC,UAAWC,KAAMiC,MACjB/M,KAAK,OACLwK,MAAO1M,IAET,uBAAK+M,UAAWC,KAAMnD,QAAtB,UACE,yBAAQyD,QAAS,kBAAMwF,KAAsB/F,UAAWC,KAAM8B,OAAQ5M,KAAK,SAA3E,oBACA,yBACEoL,QAAS,WACHlJ,GACF2O,EAAe/S,GAEbsE,GACFyO,EAAe/R,EAAMhB,IAGzB+M,UAAWC,KAAM8B,OACjB5M,KAAK,SAVP,6B,oBC4BAqK,GAAqB,CACzB0G,gBtBkM4B,SAACjS,GAAD,8CAAkB,WAAOiB,GAAP,eAAAtC,EAAA,sEACrBoB,EAAkBC,GADG,QACxCY,EADwC,QAE/B0D,OAAS,GACtBrD,EAAS,CACPC,KAAMgB,GACNf,QAASP,IALiC,2CAAlB,uDsBjM5BsR,gBtB2M4B,SAAClS,EAAcG,GAAf,8CAAmC,WAAOc,GAAP,eAAAtC,EAAA,sEACtCuB,EAAkBF,EAAMG,GADc,QACzDS,EADyD,QAEhD0D,OAAS,GACtBrD,EAAS,CACPC,KAAMkB,GACNjB,QAASP,IALkD,2CAAnC,uDsB1M5BuR,cAAelO,GACfmO,oBAAqBrO,IAGR+H,gBAZS,SAAC,GAAD,IAAGnI,EAAH,EAAGA,WAAH,MAAqD,CAC3EL,OAAQ8H,GAAUzH,GAClB9C,gBAAiByJ,GAAmB3G,MAUE4H,GAAzBO,EA9CF,SAAC,GAEQ,IADpB9L,EACmB,EADnBA,KAAMsE,EACa,EADbA,OAAQ2N,EACK,EADLA,gBAAiB3O,EACZ,EADYA,OAAQ4O,EACpB,EADoBA,gBAAiBC,EACrC,EADqCA,cAAeC,EACpD,EADoDA,oBAAqBvR,EACzE,EADyEA,gBAE5F,OAAIyC,GAAUzC,IAAoBb,EACzB,eAAC,GAAD,CAAYA,KAAMA,EAAM+R,eAAgBG,IAG/C,uBAAKnG,UAAWC,KAAMhL,SAAtB,UACE,yBAAQsL,QAAS,kBAAM2F,EAAgBjS,IAAO+L,UAAWC,KAAMqG,OAAQnR,KAAK,SAA5E,kBACA,qBAAI6K,UAAWC,KAAMgG,MAArB,SAA6BhS,IAC7B,sBAAI+L,UAAWC,KAAM1H,OAArB,mBAEGA,KAEH,uBAAKyH,UAAWC,KAAMnD,QAAtB,UACE,yBACEyD,QAAS,WAAQ8F,EAAoBpS,GAAOmS,EAAcnS,IAC1D+L,UAAWC,KAAM8B,OACjB5M,KAAK,SAHP,oBAOA,eAAC,KAAD,CACEoL,QAAS,WAAQ8F,EAAoBpS,IACrC+L,UAAWC,KAAM8B,OACjBnB,GAAE,4BAAuB3M,GAH3B,+B,oBCHFuL,GAAqB,CACzByF,evBgKgC,yDAAM,WAAO/P,GAAP,SAAAtC,EAAA,kEACtCsC,EADsC,KAE9BY,GAF8B,SAGrBnD,IAHqB,yBAEpCwC,KAFoC,KAGpCC,QAHoC,gEAAN,uDuB/JhCmR,gBAAiBtO,GACjBuO,mBvBwL+B,SAACV,GAAD,8CAAiB,WAAO5Q,GAAP,iBAAAtC,EAAA,4DACpC,KAARkT,GACF5Q,EAAS,CACPC,KAAMc,KAGJlC,EAAO,CACXE,KAAM6R,EAAI5R,eAPoC,kBAUrBJ,EAAkBC,GAVG,QAUxCc,EAVwC,QAW/B0D,OAAS,EACtBrD,EAAS,CACPC,KAAMe,GACNd,QAASP,IAGXK,EAAS,CACPC,KAAMc,KAlBoC,gDAsB9Cf,EAAS,CACPC,KAAMc,KAvBsC,yDAAjB,wDuBrLlB8J,gBAVS,SAAC,GAAD,IAAGnI,EAAH,EAAGA,WAAH,MAAqD,CAC3E/C,WAAYwJ,GAAczG,GAC1BP,OAAQ+H,GAAUxH,MAQoB4H,GAAzBO,EA1BS,SAAC,GAEQ,IAD/BlL,EAC8B,EAD9BA,WAAYoQ,EACkB,EADlBA,eAAgBsB,EACE,EADFA,gBAAiBlP,EACf,EADeA,OAAQmP,EACvB,EADuBA,mBAGrD,OADApC,qBAAU,kBAAMa,MAAkB,IAEhC,uBAAKjF,UAAWC,KAAMpL,WAAtB,UACGA,EAAW+M,KAAI,SAAC3M,GAAD,OAAc,eAAC,GAAD,eAA8BA,GAAnBA,EAAShB,SACjDoD,EAAS,eAAC,GAAD,CAAYpD,KAAK,GAAG+R,eAAgBQ,IAAyB,GACvE,uBAAK,cAAY,OAAOjG,QAAS,kBAAMgG,KAAmBvG,UAAWC,KAAM5I,OAA3E,UACE,qBAAI2I,UAAWC,KAAMwG,MAArB,iCACA,sBAAKzG,UAAWC,KAAMyG,KAAtB,wB,oBCMFlH,GAAqB,CACzB6G,oBAAqBrO,GACrB2O,QxB0UoB,kBAAM,SAACzR,GAC3BA,EAAS,CACPC,KAAM8B,QwBzUK8I,gBARS,SAAC,GAAD,IAAGnI,EAAH,EAAGA,WAAH,MAAqD,CAC3E9C,gBAAiByJ,GAAmB3G,MAOE4H,GAAzBO,EA5BK,SAAC,GAAD,IAAGjL,EAAH,EAAGA,gBAAiBuR,EAApB,EAAoBA,oBAAqBM,EAAzC,EAAyCA,QAAzC,OAClB,uBAAK3G,UAAWC,KAAMqB,OAAtB,UACE,uBAAKtB,UAAWC,KAAMnD,QAAtB,UACE,eAAC,KAAD,CACEyD,QAAS,kBAAM8F,EAAoB,KACnCrG,UAA+B,KAApBlL,EAAA,UAA4BmL,KAAM2G,KAAlC,YAA0C3G,KAAM0B,QAAW1B,KAAM2G,KAC5EhG,GAAG,SAHL,wBAOA,qBACEZ,UAA+B,KAApBlL,EAAA,UAA4BmL,KAAM2G,KAAlC,YAA0C3G,KAAM0B,QAAW1B,KAAM2G,KAD9E,sBAMF,eAAC,KAAD,CAAMrG,QAAS,kBAAMoG,KAAW/F,GAAG,IAAIZ,UAAWC,KAAM4G,OAAxD,2B,oBCoFErH,GAAqB,CACzBsH,SzBiLqB,SAAChB,GAAD,OAAiB,SAAC5Q,GACvCA,EAAS,CACPC,KAAMoB,GACNnB,QAAS0Q,MyBnLXiB,gBzBuL4B,SAACjB,GAAD,OAAiB,SAAC5Q,GAC9CA,EAAS,CACPC,KAAMqB,GACNpB,QAAS0Q,MyBzLXkB,YAAa7O,GACb8O,YzBkNwB,SAAChU,EAAsBc,GAAvB,8CAAwD,WAAOmB,GAAP,eAAAtC,EAAA,sEAC5D0B,EAAcrB,EAAcc,GADgC,OAC1E0D,EAD0E,OAEhFvC,EAAS,CACPC,KAAMyB,GACNxB,QAASqC,IAJqE,2CAAxD,uDyBjNxByP,YzByNwB,SAACjU,EAAsBc,GAAvB,8CAAwD,WAAOmB,GAAP,eAAAtC,EAAA,6DAC3EmB,EAAKE,MACRiB,EAAS,CACPC,KAAM2B,KAHsE,kBAO1DvC,EAActB,EAAcc,GAP8B,OAOxE0D,EAPwE,OAQ9EvC,EAAS,CACPC,KAAM0B,GACNzB,QAASqC,IAVmE,gDAa9EvC,EAAS,CACPC,KAAM2B,KAdsE,yDAAxD,uDyBxNxBqQ,UzB2OsB,SAACC,GAAD,OAAmB,SAAClS,GAC1CA,EAAS,CACPC,KAAM4B,GACN3B,QAASgS,MyB7OXC,UzBiPsB,SAACvP,GAAD,OAAmB,SAAC5C,GAC1CA,EAAS,CACPC,KAAM6B,GACN5B,QAAS0C,OyBjPEiI,gBAjBS,SAAC,GAAD,IlBzCA1K,EkByCGuC,EAAH,EAAGA,WAAH,MAAqD,CAC3ExE,MlB1CsBiC,EkB0CRuC,ElB1CkCvC,EAAMtB,KAAKE,MkB2C3DyD,YAAa4H,GAAe1H,GAC5B7D,KAAMwL,GAAQ3H,GACd9C,gBAAiByJ,GAAmB3G,GACpCP,OAAQ+H,GAAUxH,MAYoB4H,GAAzBO,EA/FI,SAAC,GAIQ,IAH1B3M,EAGyB,EAHzBA,KACAsE,EAEyB,EAFzBA,YACAoP,EACyB,EADzBA,SAAUC,EACe,EADfA,gBAAiBC,EACF,EADEA,YAAajT,EACf,EADeA,KAAMe,EACrB,EADqBA,gBAAiBmS,EACtC,EADsCA,YAAa5P,EACnD,EADmDA,OAAQ6P,EAC3D,EAD2DA,YAAaC,EACxE,EADwEA,UAAWE,EACnF,EADmFA,UAG5G,OADAhE,QAAQC,MAEN,uBAAKtD,UAAWC,KAAM5I,OAAtB,UACE,iCACE,oBAAG2I,UAAWC,KAAMgG,MAApB,mBACA,wBACE9F,QAAS,SAACC,GAAD,OAAO0G,EAAU1G,EAAEtH,OAA4B6G,QACxDqC,GAAG,QACHhC,UAAWC,KAAMiC,MACjB/M,KAAK,OACLwK,MAAOvM,OAGX,iCACE,oBAAG4M,UAAWC,KAAMgG,MAApB,0BACA,wBACE9F,QAAS,SAACC,GAAD,OAAO2G,EAAiB3G,EAAEtH,OAA4B6G,QAC/DqC,GAAG,QACHhC,UAAWC,KAAMiC,MACjB/M,KAAK,OACLwK,MAAOjI,OAGX,uBAAKsI,UAAWC,KAAMnD,QAAtB,UACE,uBAAKkD,UAAWC,KAAM8B,OAAtB,UACE,2CACA,yBAAO/B,UAAWC,KAAMqH,MAAOxF,QAAQ,QAAvC,UACE,wBACEG,SAAU,SAAC7B,GACThG,GAAqBgG,EAAEtH,OAAQuO,IAEjClS,KAAK,OACLoS,OAAO,UACPvF,GAAG,UAPP,wBAYF,uBAAKhC,UAAWC,KAAM8B,OAAtB,UACE,2CACA,yBAAO/B,UAAWC,KAAMqH,MAAOxF,QAAQ,QAAvC,UACE,wBACE3M,KAAK,OACL8M,SAAU,SAAC7B,GACThG,GAAqBgG,EAAEtH,OAAQqO,IAEjCnF,GAAG,QACHuF,OAAO,YAPX,2BAaJ,uBAAKvH,UAAWC,KAAMuH,SAAtB,UACE,yBAAQjH,QAAS,kBAAMyG,EAAY,KAAKhH,UAAWC,KAAMwH,QAAStS,KAAK,SAAvE,oBACA,yBACEoL,QAAS,WACHlJ,EACF6P,EAAYpS,EAAiBf,GAE7BkT,EAAYnS,EAAiBf,IAGjCiM,UAAWC,KAAMwH,QACjBtS,KAAK,SATP,6B,oBC3BFqK,GAAqB,CACzBkI,Y1BmPwB,SAACzU,EAAsBgB,GAAvB,8CAAwC,WAAOiB,GAAP,eAAAtC,EAAA,sEAC5CyB,EAAcpB,EAAcgB,GADgB,OAC1DwD,EAD0D,OAEhEvC,EAAS,CACPC,KAAMsB,GACNrB,QAASqC,IAJqD,2CAAxC,uD0BlPxBkQ,a1BiQyB,SAAC5T,GAAD,OAAkC,SAACmB,GAC5DA,EAAS,CACPC,KAAMwB,GACNvB,QAASrB,M0BnQXqS,cAAelO,GACf8O,YAAa7O,IAGA4H,gBAXS,SAAC,GAAD,InBMG1K,EmBNAuC,EAAH,EAAGA,WAAH,MAAsD,CAC5E9C,gBAAiByJ,GAAmB3G,GACpCJ,SnBIyBnC,EmBJLuC,EnBI+BvC,EAAMmC,YmBKnBgI,GAAzBO,EAhDG,SAAC,GAEQ,IADzB9L,EACwB,EADxBA,KAAMyD,EACkB,EADlBA,YAAaC,EACK,EADLA,KAAM+P,EACD,EADCA,YAAa5S,EACd,EADcA,gBAAiB6S,EAC/B,EAD+BA,aAAcX,EAC7C,EAD6CA,YAErE,OADwB,EAD0DxP,UAElEvD,EACP,eAAC,GAAD,IAGP,uBAAK+L,UAAWC,KAAMsD,KAAtB,UACE,yBAAQhD,QAAS,kBAAMmH,EAAY5S,EAAiBb,IAAO+L,UAAWC,KAAMqG,OAAQnR,KAAK,SAAzF,kBACA,sBAAI6K,UAAWC,KAAMwG,MAArB,kBAEE,gCAAOxS,OAET,sBAAI+L,UAAWC,KAAMwG,MAArB,yBAEE,gCAAO/O,OAET,sBAAIsI,UAAWC,KAAMwG,MAArB,wBAEE,kCACGxS,EADH,aAKF,qBAAI+L,UAAWC,KAAMwG,MAArB,oBACA,sBAAKtC,IAAKxM,EAAM2M,IAAKrQ,IACrB,yBACEsM,QAAS,WAAQoH,EAAa,CAAE1T,OAAMyD,cAAaC,SAASqP,EAAY/S,IACxE+L,UAAWC,KAAM2H,OACjBzS,KAAK,SAHP,0B,oBCEAqK,GAAqB,CACzB+G,gBAAiBtO,GACjB4P,U3BuOsB,SAAC5U,GAAD,8CAA0B,WAAOiC,GAAP,eAAAtC,EAAA,sEAC5BI,EAAYC,GADgB,QAC1CwE,EAD0C,QAEtCc,OAAS,GACjBrD,EAAS,CACPC,KAAMmB,GACNlB,QAASqC,IALmC,2CAA1B,wD2BpOTsI,gBAVS,SAAC,GAAD,IpBkBS1K,EoBlBNuC,EAAH,EAAGA,WAAH,MAAqD,CAC3EH,OpBiB+BpC,EoBjBPuC,EpBiBiCvC,EAAMoC,OoBhB/D3C,gBAAiByJ,GAAmB3G,GACpCP,OAAQ+H,GAAUxH,MAOoB4H,GAAzBO,EAnCI,SAAC,GAEQ,IAD1BtI,EACyB,EADzBA,MAAO3C,EACkB,EADlBA,gBAAiBuC,EACC,EADDA,OAAQkP,EACP,EADOA,gBAAiBsB,EACxB,EADwBA,UAEjD,MAAwB,KAApB/S,EACK,eAAC,KAAD,CAAU6L,KAAK,uBAAuBC,GAAG,YAElDwD,qBAAU,kBAAMyD,EAAU/S,KAAkB,IAE1C,iCACE,4CAEE,uBAAMkL,UAAWC,KAAMhL,SAAvB,SAAkCH,OAEpC,uBAAKkL,UAAWC,KAAMxI,MAAtB,UACGA,EAAMmK,KAAI,SAACxO,GAAD,OAAU,eAAC,GAAD,eAA0BA,GAAfA,EAAKa,SACpCoD,EAAS,eAAC,GAAD,IAAiB,GAC3B,uBAAK,cAAY,OAAOkJ,QAAS,kBAAMgG,KAAmBvG,UAAWC,KAAM5I,OAA3E,UACE,qBAAI2I,UAAWC,KAAMwG,MAArB,0BACA,sBAAKzG,UAAWC,KAAMyG,KAAtB,4BCRK3G,gBAJS,SAAC,GAAD,IAAGnI,EAAH,EAAGA,WAAH,MAAqD,CAC3ER,KAAM+H,GAAQvH,MAGDmI,EAnBG,SAAC,GACjB,OADuD,EAApC3I,KAKjB,iCACE,eAAC,GAAD,IACA,gBAAC,KAAD,WACE,eAAC,KAAD,CAAO0Q,OAAK,EAACC,KAAK,SAASC,UAAWC,KACtC,eAAC,KAAD,CAAOH,OAAK,EAACC,KAAK,0BAA0BC,UAAWE,WAPpD,eAAC,KAAD,CAAUvH,KAAK,SAASC,GAAG,SCyDhCpB,GAAqB,CACzB2I,M3BmCwB,kBAAM,SAACjT,GAC/BA,EAAS,CACPC,KAAM6F,O2BpCRyE,iBAAkB1H,IAGLgI,gBATS,SAAC,GAAD,IAAGhM,EAAH,EAAGA,KAAM6D,EAAT,EAASA,WAAT,MAAkC,CACxDsI,MAAO1B,GAASzK,GAChBmD,MAAO+H,GAASrH,MAOsB4H,GAAzBO,EAlDH,SAAC,GAEO,IADlBG,EACiB,EADjBA,MAAOiI,EACU,EADVA,MAAO1I,EACG,EADHA,iBAAkBvI,EACf,EADeA,MAchC,OACE,uBACE,cAAY,OACZqJ,QAASL,EAAQ,SAACE,GAAD,OAfrB,SAAqB/H,GACnB,IAAQS,EAAWT,EAAXS,OACJA,IACG5B,EAI4C,YAArC4B,EAAuBsP,WACjC3I,IAJ0C,OAArC3G,EAAuBsP,WAA4D,WAArCtP,EAAuBsP,WACxED,KAU2DE,CAAYjI,IAAK,aAChFJ,UAAWC,KAAMqI,IAHnB,UAKE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOP,KAAK,kBAAkBC,UAAWO,KACzC,eAAC,KAAD,CAAOR,KAAK,cAAcC,UAAWO,KACrC,eAAC,KAAD,CAAOT,OAAK,EAACC,KAAK,IAAIC,UAAWO,QAEnC,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOR,KAAK,SAASC,UAAWQ,KAChC,eAAC,KAAD,CAAOT,KAAK,kBAAkBC,UAAWS,KACzC,eAAC,KAAD,CAAOV,KAAK,cAAcC,UAAWU,KACrC,eAAC,KAAD,CAAOX,KAAK,IAAIC,UAAWW,cC9CnCC,IAASC,OACP,eAAC,IAAD,CAAU5K,MAAOA,GAAjB,SACE,eAAC,IAAD,CAAiBT,QAASA,GAA1B,SACE,eAAC,GAAD,QAGJsL,SAASC,eAAe,W","file":"static/js/main.b5758363.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__2Oyr-\",\"button\":\"style_button__1Llqo\",\"input\":\"style_input__2dczz\",\"buttonBack\":\"style_buttonBack__3VvuQ\",\"slider\":\"style_slider__2DaPq\",\"burger\":\"style_burger__2qj3E\",\"show\":\"style_show__2H-em\",\"first\":\"style_first__BTWJ3\",\"second\":\"style_second__3fDOt\",\"third\":\"style_third__2fg9b\",\"menu\":\"style_menu__3VBfH\",\"active\":\"style_active__1d7ja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"create\":\"style_create__2feCP\",\"title\":\"style_title__83snG\",\"input\":\"style_input__1Li3M\",\"buttons\":\"style_buttons__1aGZl\",\"button\":\"style_button__3sJ0L\",\"label\":\"style_label__3W4TM\",\"controls\":\"style_controls__D9CMw\",\"control\":\"style_control__30t8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__17aGf\",\"buttons\":\"style_buttons__KIwTQ\",\"link\":\"style_link__2rZVN\",\"logOut\":\"style_logOut__3H6zG\",\"active\":\"style_active__2ADld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__2ACZx\",\"front\":\"style_front__30GqM\",\"back\":\"style_back__1_XDo\",\"cardHeader\":\"style_cardHeader__k8U05\",\"rotate\":\"style_rotate__1EXbh\",\"inactive\":\"style_inactive__1i_Dd\",\"stars\":\"style_stars__3N-JM\",\"success\":\"style_success__3Mob2\",\"error\":\"style_error__3bT3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"create\":\"style_create__KC-Qt\",\"buttons\":\"style_buttons__1s2Iz\",\"button\":\"style_button__1Iozq\",\"title\":\"style_title__3vyGy\",\"input\":\"style_input__3ONHs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category\":\"style_category__3RdW0\",\"delete\":\"style_delete__2Lziv\",\"title\":\"style_title__3lL0Q\",\"length\":\"style_length__1Jb1j\",\"buttons\":\"style_buttons__3PtEX\",\"button\":\"style_button__2235h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__1aSHE\",\"field\":\"style_field__1Izca\",\"delete\":\"style_delete__3DxLL\",\"change\":\"style_change__1wjfm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"style_modal__EHF_b\",\"window\":\"style_window__3kyqm\",\"login\":\"style_login__DpFtO\",\"buttons\":\"style_buttons__2Xh34\",\"cancel\":\"style_cancel__Dj4kx\",\"autorisation\":\"style_autorisation__VXFmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__2O0i0\",\"buttons\":\"style_buttons__1Y-_A\",\"reset\":\"style_reset__3ThlZ\",\"repeat\":\"style_repeat__2NQNB\",\"statistics\":\"style_statistics__3wyJg\",\"row\":\"style_row__2lcAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"style_cards__1hD5m\",\"btns\":\"style_btns__3mz4P\",\"startBtn\":\"style_startBtn__2blqT\",\"repeat\":\"style_repeat__1bPbi\",\"stars\":\"style_stars__117ew\",\"success\":\"style_success__hX9FH\",\"error\":\"style_error__2erVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"words\":\"style_words__3BHcY\",\"category\":\"style_category__1hdOK\",\"create\":\"style_create__1Ft6_\",\"plus\":\"style_plus__Bh0GQ\",\"field\":\"style_field__1HmaH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categories\":\"style_categories__2GjhF\",\"create\":\"style_create__3ozzu\",\"plus\":\"style_plus__KRbLZ\",\"field\":\"style_field__2VTdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBtn\":\"style_loginBtn__2uCjG\",\"wrapper\":\"style_wrapper__7BL6u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stars\":\"style_stars__3Fo0O\",\"success\":\"style_success__oNQho\",\"error\":\"style_error__3-s93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"style_div__3Uy6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__r92wv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"style_cards__3l0XA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__1owJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sort\":\"style_sort__1yYfn\"};","import { Auth, Category, Word } from './interface';\n\nconst url = 'http://localhost:3030/';\n\nexport async function getCategoriesAPI(): Promise<Category[]> {\n  const response = await fetch(url);\n  return response.json();\n}\n\nexport async function getWordsAPI(categoryName: string): Promise<Word[]> {\n  const response = await fetch(`${url}api/categories/${categoryName}`);\n  return response.json();\n}\n\nexport async function getAllWordsAPI(): Promise<Word[]> {\n  const response = await fetch(`${url}api/statistics/`);\n  return response.json();\n}\n\nexport async function updateStatisticAPI(word: Word): Promise<Word[]> {\n  const response = await fetch(`${url}api/statistics/`, {\n    method: 'PUT',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(word),\n  });\n  return response.json();\n}\n\nexport async function resetWordsAPI(): Promise<Word[]> {\n  const response = await fetch(`${url}api/statistics/`, {\n    method: 'DELETE',\n  });\n  return response.json();\n}\n\nexport async function getDifficultWordsAPI(): Promise<Word[] | []> {\n  const response = await fetch(`${url}api/difficult/`);\n  return response.json();\n}\n\nexport async function getAuthAPI(): Promise<Auth> {\n  const response = await fetch(`${url}api/auth/`);\n  return response.json();\n}\n\nexport async function createCategoryAPI(data: Record<string, string>): Promise<Category[]> {\n  const response = await fetch(url, {\n    method: 'POST',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  return response.json();\n}\n\nexport async function deleteCategoryAPI(name: string): Promise<Category[]> {\n  const response = await fetch(`${url}${name.toLowerCase()}`, {\n    method: 'DELETE',\n  });\n  return response.json();\n}\n\nexport async function updateCategoryAPI(name: string, newName: string): Promise<Category[]> {\n  const data = {\n    name: name.toLowerCase(),\n    newName: newName.toLowerCase(),\n  };\n  const response = await fetch(url, {\n    method: 'PUT',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  return response.json();\n}\n\nexport async function deleteWordAPI(categoryName: string, name: string): Promise<Word[]> {\n  const response = await fetch(`${url}api/categories/${categoryName}/${name}`, {\n    method: 'DELETE',\n  });\n  return response.json();\n}\n\nexport async function updateWordAPI(categoryName: string, data: Record<string, string>): Promise<Word[]> {\n  const response = await fetch(`${url}api/categories/${categoryName}`, {\n    method: 'PUT',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  return response.json();\n}\n\nexport async function createWordAPI(categoryName: string, data: Record<string, string>): Promise<Word[]> {\n  const response = await fetch(`${url}api/categories/${categoryName}`, {\n    method: 'POST',\n    mode: 'cors',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  return response.json();\n}\n","import { Dispatch } from 'redux';\nimport { getCategoriesAPI } from '../api';\nimport { Category } from '../api/interface';\n\nconst GET_CATEGORIES_START = 'GET_CATEGORIES_START';\nconst GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\nconst GET_CATEGORIES_FAILURE = 'GET_CATEGORIES_FAILURE';\nconst SELECT_CATEGORY = 'SELECT_CATEGORY';\n\nexport interface Categories {\n  loading: boolean,\n  categories: Category[],\n  currentCategory: string\n}\n\nconst initialState = {\n  categories: [],\n  currentCategory: '',\n  loading: false,\n};\n\nconst categories = (state = initialState, { payload, type }: Record<string, string>) => {\n  switch (type) {\n    case GET_CATEGORIES_START:\n      return { ...state, loading: true };\n    case GET_CATEGORIES_SUCCESS:\n      return { ...state, categories: payload, loading: false };\n    case GET_CATEGORIES_FAILURE:\n      return { ...state, loading: false };\n    case SELECT_CATEGORY:\n      return { ...state, currentCategory: payload };\n    default:\n      return state;\n  }\n};\n\nexport const getCategories = () => async (dispatch: Dispatch) => {\n  dispatch({\n    type: GET_CATEGORIES_START,\n  });\n  try {\n    const allCategories = await getCategoriesAPI();\n    dispatch({\n      type: GET_CATEGORIES_SUCCESS,\n      payload: allCategories,\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_CATEGORIES_FAILURE,\n    });\n  }\n};\n\nexport const selectCategory = (category: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SELECT_CATEGORY,\n    payload: category,\n  });\n};\n\nexport default categories;\n","import { Dispatch } from 'redux';\nimport {\n  createCategoryAPI,\n  createWordAPI,\n  deleteCategoryAPI,\n  deleteWordAPI,\n  getAuthAPI,\n  getCategoriesAPI, getWordsAPI, updateCategoryAPI, updateWordAPI,\n} from '../api';\nimport { Category, Word } from '../api/interface';\n\nconst TOGGLE_LOGIN_MODAL = 'TOGGLE_LOGIN_MODAL';\nconst CLOSE_LOGIN_MODAL = 'TOGGLE_LOGIN_MODAL';\nconst SET_NAME = 'SET_NAME';\nconst SET_PASSWORD = 'SET_PASSWORD';\nconst CHECK_ADMIN_START = 'CHECK_ADMIN_START';\nconst CHECK_ADMIN_SUCCESS = 'CHECK_ADMIN_SUCCESS';\nconst CHECK_ADMIN_FAILURE = 'CHECK_ADMIN_FAILURE';\nconst SET_CURRENT_CATEGORY = 'SET_CURRENT_CATEGORY';\nconst GET_CATEGORIES_ADMIN = 'GET_CATEGORIES_ADMIN';\nconst CREATE_CATEGORY = 'CREATE_CATEGORY';\nconst NEW_CATEGORY = 'NEW_CATEGORY';\nconst DELETE_NEW_CATEGORY = 'DELETE_NEW_CATEGORY';\nconst CREATE_NEW_CATEGORY_SUCCESS = 'CREATE_NEW_CATEGORY_SUCCESS';\nconst DELETE_CATEGORY_SUCCESS = 'DELETE_CATEGORY_SUCCESS';\nconst TOGGLE_UPDATE = 'TOGGLE_UPDATE';\nconst UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nconst SET_WORDS = 'SET_WORDS';\nconst SET_WORD = 'SET_WORD';\nconst SET_TRANSLATION = 'SET_TRANSLATION';\nconst DELETE_WORD = 'DELETE_WORD';\nconst SET_NEW_WORD = 'SET_NEW_WORD';\nconst SET_PREV_DATA = 'SET_PREV_DATA';\nconst UPDATE_WORD = 'UPDATE_WORD';\nconst CREATE_WORD = 'CREATE_WORD';\nconst CREATE_WORD_FAILURE = 'CREATE_WORD_FAILURE';\nconst SET_IMAGE = 'SET_IMAGE';\nconst SET_SOUND = 'SET_SOUND';\nconst LOG_OUT = 'LOG_OUT';\n\nexport interface LoginInterface {\n  login: boolean\n  name: string,\n  password: string,\n  loading: boolean,\n  auth: boolean,\n  currentCategory: string,\n  categories: Category[],\n  create: boolean,\n  newCategory: string,\n  newWord: string,\n  update: boolean,\n  words: Word[],\n  data: Record<string, string>\n}\n\nconst initialState = {\n  login: false,\n  name: '',\n  password: '',\n  loading: false,\n  auth: false,\n  currentCategory: '',\n  categories: [],\n  create: false,\n  newCategory: '',\n  update: false,\n  newWord: '',\n  words: [],\n  data: {\n    name: '',\n    translation: '',\n    logo: '',\n  },\n};\n\nexport const loginState = (state = initialState, { payload, type }: Record<string, string>) => {\n  switch (type) {\n    case TOGGLE_LOGIN_MODAL:\n      return { ...state, login: !state.login };\n    case CLOSE_LOGIN_MODAL:\n      return { ...state, login: false };\n    case SET_NAME:\n      return { ...state, name: payload };\n    case SET_PASSWORD:\n      return { ...state, password: payload };\n    case CHECK_ADMIN_START:\n      return { ...state, loading: true };\n    case CHECK_ADMIN_SUCCESS:\n      return {\n        ...state, loading: false, auth: true, login: false,\n      };\n    case CHECK_ADMIN_FAILURE:\n      return {\n        ...state, loading: false, login: false,\n      };\n    case SET_CURRENT_CATEGORY:\n      return { ...state, currentCategory: payload };\n    case GET_CATEGORIES_ADMIN:\n      return { ...state, categories: payload };\n    case CREATE_CATEGORY:\n      return { ...state, create: true, data: { name: '', logo: '', translation: '' } };\n    case NEW_CATEGORY:\n      return { ...state, newCategory: payload };\n    case DELETE_NEW_CATEGORY:\n      return {\n        ...state, newCategory: '', create: false, update: false, currentCategory: '',\n      };\n    case CREATE_NEW_CATEGORY_SUCCESS:\n      return {\n        ...state, categories: payload, create: false, newCategory: '',\n      };\n    case DELETE_CATEGORY_SUCCESS:\n      return { ...state, categories: payload };\n    case TOGGLE_UPDATE:\n      return { ...state, update: !state.update };\n    case UPDATE_CATEGORY:\n      return {\n        ...state, update: false, categories: payload, newCategory: '', currentCategory: '',\n      };\n    case SET_WORDS:\n    case DELETE_WORD:\n    case UPDATE_WORD:\n    case CREATE_WORD:\n      return { ...state, words: payload, create: false };\n    case SET_WORD:\n      return { ...state, data: { ...state.data, name: payload.toLowerCase() } };\n    case SET_TRANSLATION:\n      return { ...state, data: { ...state.data, translation: payload.toLowerCase() } };\n    case SET_NEW_WORD:\n      return { ...state, newWord: payload, data: { ...state.data, oldName: payload } };\n    case SET_PREV_DATA:\n      return { ...state, data: payload };\n    case CREATE_WORD_FAILURE:\n      return { ...state, create: false };\n    case SET_IMAGE:\n      return { ...state, data: { ...state.data, logo: payload } };\n    case SET_SOUND:\n      return { ...state, data: { ...state.data, sound: payload } };\n    case LOG_OUT:\n      return { ...state, auth: false };\n    default:\n      return state;\n  }\n};\n\nexport const toggleLoginModal = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: TOGGLE_LOGIN_MODAL,\n  });\n};\n\nexport const closeLoginModal = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: CLOSE_LOGIN_MODAL,\n  });\n};\n\nexport const setName = (value: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_NAME,\n    payload: value.trim(),\n  });\n};\n\nexport const setPassword = (value: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_PASSWORD,\n    payload: value.trim(),\n  });\n};\n\nexport const checkAdmin = (name: string, password: string) => async (dispatch: Dispatch) => {\n  dispatch({\n    type: CHECK_ADMIN_START,\n  });\n  try {\n    const data = await getAuthAPI();\n    if (data.name === name && data.password === password) {\n      dispatch({\n        type: CHECK_ADMIN_SUCCESS,\n      });\n    } else {\n      dispatch({\n        type: CHECK_ADMIN_FAILURE,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: CHECK_ADMIN_FAILURE,\n    });\n  }\n};\n\nexport const setCurrentCategory = (name: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_CURRENT_CATEGORY,\n    payload: name,\n  });\n};\n\nexport const getCategoriesAdmin = () => async (dispatch: Dispatch) => {\n  dispatch({\n    type: GET_CATEGORIES_ADMIN,\n    payload: await getCategoriesAPI(),\n  });\n};\n\nexport const createCategory = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: CREATE_CATEGORY,\n  });\n};\n\nexport const newCategory = (val: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: NEW_CATEGORY,\n    payload: val,\n  });\n};\n\nexport const deleteNewCategory = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: DELETE_NEW_CATEGORY,\n  });\n};\n\nexport const createNewCategory = (val: string) => async (dispatch: Dispatch) => {\n  if (val === '') {\n    dispatch({\n      type: DELETE_NEW_CATEGORY,\n    });\n  }\n  const data = {\n    name: val.toLowerCase(),\n  };\n  try {\n    const categories = await createCategoryAPI(data);\n    if (categories.length > 0) {\n      dispatch({\n        type: CREATE_NEW_CATEGORY_SUCCESS,\n        payload: categories,\n      });\n    } else {\n      dispatch({\n        type: DELETE_NEW_CATEGORY,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: DELETE_NEW_CATEGORY,\n    });\n  }\n};\n\nexport const deleteCategory = (name: string) => async (dispatch: Dispatch) => {\n  const categories = await deleteCategoryAPI(name);\n  if (categories.length > 0) {\n    dispatch({\n      type: DELETE_CATEGORY_SUCCESS,\n      payload: categories,\n    });\n  }\n};\n\nexport const updateCategory = (name: string, newName: string) => async (dispatch: Dispatch) => {\n  const categories = await updateCategoryAPI(name, newName);\n  if (categories.length > 0) {\n    dispatch({\n      type: UPDATE_CATEGORY,\n      payload: categories,\n    });\n  }\n};\n\nexport const toggleUpdate = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: TOGGLE_UPDATE,\n  });\n};\n\nexport const setWords = (categoryName: string) => async (dispatch: Dispatch) => {\n  const words = await getWordsAPI(categoryName);\n  if (words.length > 0) {\n    dispatch({\n      type: SET_WORDS,\n      payload: words,\n    });\n  }\n};\n\nexport const setWord = (val: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_WORD,\n    payload: val,\n  });\n};\n\nexport const setTranslation = (val: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_TRANSLATION,\n    payload: val,\n  });\n};\n\nexport const deleteWord = (categoryName: string, name: string) => async (dispatch: Dispatch) => {\n  const words = await deleteWordAPI(categoryName, name);\n  dispatch({\n    type: DELETE_WORD,\n    payload: words,\n  });\n};\n\nexport const setNewWord = (newWord: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_NEW_WORD,\n    payload: newWord,\n  });\n};\n\nexport const setPrevData = (data: Record<string, string>) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_PREV_DATA,\n    payload: data,\n  });\n};\n\nexport const updateWord = (categoryName: string, data: Record<string, string>) => async (dispatch: Dispatch) => {\n  const words = await updateWordAPI(categoryName, data);\n  dispatch({\n    type: UPDATE_WORD,\n    payload: words,\n  });\n};\n\nexport const createWord = (categoryName: string, data: Record<string, string>) => async (dispatch: Dispatch) => {\n  if (!data.name) {\n    dispatch({\n      type: CREATE_WORD_FAILURE,\n    });\n  }\n  try {\n    const words = await createWordAPI(categoryName, data);\n    dispatch({\n      type: CREATE_WORD,\n      payload: words,\n    });\n  } catch (e) {\n    dispatch({\n      type: CREATE_WORD_FAILURE,\n    });\n  }\n};\n\nexport const setImage = (image: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_IMAGE,\n    payload: image,\n  });\n};\n\nexport const setSound = (sound: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_SOUND,\n    payload: sound,\n  });\n};\n\nexport const logOut = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: LOG_OUT,\n  });\n};\n\nexport default loginState;\n","import React from 'react';\n\nimport { Word } from '../api/interface';\n\nexport function soundPlay(word: string, event: React.MouseEvent<Element, MouseEvent> | undefined = undefined) {\n  if (event === undefined) {\n    if (word.length > 100) {\n      const audio = new Audio(`${word}`);\n      audio.play();\n    } else {\n      const audio = new Audio(`${window.location.origin}/english-for-kids/audio/${word}.mp3`);\n      audio.play();\n    }\n  }\n  if (event !== undefined) {\n    if ((event.target as HTMLElement).getAttribute('data-type') !== 'rotate'\n    && (event.target as HTMLElement).getAttribute('data-type') !== 'back') {\n      if (word.length > 100) {\n        const audio = new Audio(`${word}`);\n        audio.play();\n      } else {\n        const audio = new Audio(`${window.location.origin}/english-for-kids/audio/${word}.mp3`);\n        audio.play();\n      }\n    }\n  }\n}\n\nfunction randomWordOrder(max: number) {\n  const order: Set<number> = new Set();\n  let copyMax = max;\n  let min = 0;\n  while (order.size !== max) {\n    const num = Math.floor(Math.random() * (copyMax - min) + min);\n    order.add(num);\n    if (max === num) {\n      copyMax -= 1;\n    }\n    if (min === num) {\n      min += 1;\n    }\n  }\n  return order;\n}\n\nexport function createRandowWordOrder(words: Word[]) {\n  const order = randomWordOrder(words.length);\n\n  const result: Array<string> = [];\n  order.forEach((num) => {\n    result.push(words[num].name);\n  });\n\n  return result;\n}\n\nexport function percent(correct: number, wrong: number) {\n  if (wrong === 0) {\n    return 0;\n  }\n  const sum = correct + wrong;\n  return +(wrong / sum).toFixed(2) * 100;\n}\n\nexport function encodeImageFileAsURL(element: HTMLInputElement, disp: Function): string | void {\n  if (element.files) {\n    const file = element.files[0];\n    const reader = new FileReader();\n    reader.onloadend = function () {\n      disp(reader.result);\n    };\n    reader.readAsDataURL(file);\n  }\n  return undefined;\n}\n","import { Dispatch } from 'redux';\nimport { soundPlay } from '../utills';\n\nconst TOGGLE_GAME = 'TOGGLE_GAME';\nconst SHOW_MODAL = 'SHOW_MODAL';\nconst RESET_CURRENT_CATEGORY = 'RESET_CURRENT_CATEGORY';\nconst CLOSE_MODAL = 'CLOSE_MODAL';\nconst START_GAME = 'START_GAME';\nconst FINISH_GAME = 'FINISH_GAME';\nconst SET_RANDOM_WORD_ORDER = 'SET_RANDOM_WORD_ORDER';\nconst SET_CURRENT_WORD = 'SET_CURRENT_WORD';\nconst NEXT_WORD = 'NEXT_WORD';\nconst CHANGE_RATING = 'CHANGE_RATING';\nconst SET_MISTAKE = 'SET_MISTAKE';\nconst OPEN_WINDOW_AFTER_GAME = 'OPEN_WINDOW_AFTER_GAME';\n\nexport interface StateInterface {\n    game: boolean,\n    showModal: boolean,\n    start: boolean,\n    finish: boolean,\n    currentWord: string,\n    randomWordOrder: Array<string>,\n    rating: Array<string>,\n    allMistakes: number,\n    windowAfterGame: boolean,\n}\n\nconst initialState = {\n  game: false,\n  showModal: false,\n  start: false,\n  finish: false,\n  currentWord: '',\n  randomWordOrder: [],\n  rating: [],\n  allMistakes: 0,\n  windowAfterGame: false,\n} as StateInterface;\n\nexport const data = (state = initialState, { type, payload }: Record<string, string>) => {\n  const currentNum = state.randomWordOrder.indexOf(state.currentWord);\n  const nextWord = state.randomWordOrder[currentNum + 1];\n  switch (type) {\n    case TOGGLE_GAME:\n      return { ...state, game: !state.game };\n    case SHOW_MODAL:\n      return { ...state, showModal: !state.showModal };\n    case RESET_CURRENT_CATEGORY:\n      return { ...state, currentCategory: '' };\n    case CLOSE_MODAL:\n      return { ...state, showModal: false };\n    case START_GAME:\n      return { ...state, start: true };\n    case FINISH_GAME:\n      return {\n        ...state,\n        start: false,\n        finish: true,\n        rating: [],\n        allMistakes: 0,\n        currentWord: '',\n        windowAfterGame: false,\n        randowWordOrder: [],\n      };\n    case SET_RANDOM_WORD_ORDER:\n      return { ...state, randomWordOrder: payload };\n    case SET_CURRENT_WORD:\n      return { ...state, currentWord: payload };\n    case NEXT_WORD:\n      if (nextWord !== undefined) {\n        setTimeout(() => soundPlay(nextWord), 1000);\n        return { ...state, currentWord: nextWord };\n      }\n      return { ...state, currentWord: 'END' };\n    case CHANGE_RATING:\n      return { ...state, rating: [...state.rating, payload] };\n    case SET_MISTAKE:\n      return { ...state, allMistakes: state.allMistakes + 1 };\n    case OPEN_WINDOW_AFTER_GAME:\n      return { ...state, windowAfterGame: true };\n    default:\n      return state;\n  }\n};\n\nexport const toggleGame = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: TOGGLE_GAME,\n  });\n};\n\nexport const showModal = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SHOW_MODAL,\n  });\n};\n\nexport const resetCurrentCategory = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: RESET_CURRENT_CATEGORY,\n  });\n};\n\nexport const closeModal = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: CLOSE_MODAL,\n  });\n};\n\nexport const startGame = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: START_GAME,\n  });\n};\n\nexport const finishGame = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: FINISH_GAME,\n  });\n};\n\nconst setCurrentWord = (word: string) => ({\n  type: SET_CURRENT_WORD,\n  payload: word,\n});\n\nexport const setRandomWordOrder = (order: Array<string>) => (dispatch: Dispatch) => {\n  dispatch(setCurrentWord(order[0]));\n  dispatch({\n    type: SET_RANDOM_WORD_ORDER,\n    payload: order,\n  });\n};\n\nexport const nextWord = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: NEXT_WORD,\n  });\n};\n\nexport const changeRating = (type: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: CHANGE_RATING,\n    payload: type,\n  });\n};\n\nexport const setMistake = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_MISTAKE,\n  });\n};\n\nexport const openWindowAfterGame = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: OPEN_WINDOW_AFTER_GAME,\n  });\n};\n","import { Dispatch } from 'redux';\nimport { getAllWordsAPI, resetWordsAPI, updateStatisticAPI } from '../api';\nimport { Word } from '../api/interface';\nimport { percent } from '../utills/index';\n\nconst GET_ALL_WORDS_START = 'GET_ALL_WORDS_START';\nconst GET_ALL_WORDS_SUCCESS = 'GET_ALL_WORDS_SUCCESS';\nconst GET_ALL_WORDS_FAILURE = 'GET_ALL_WORDS_FAILURE';\nconst UPDATE_STATISTICS = 'UPDATE_STATISTICS';\nconst SET_SORT_TYPE = 'SET_SORT_TYPE';\nconst RESET_WORDS = 'RESET_WORDS';\n\nexport interface StatisticsInterface {\n    words: Array<Record<string, string | number>>,\n    sortType: string,\n    order: string,\n    buttons: Array<string>,\n    loading: boolean,\n}\n\nconst initialState = {\n  words: [],\n  sortType: 'name',\n  order: 'ASC',\n  buttons: ['name', 'translation', 'category', 'clicks', 'correct', 'wrong', 'percent'],\n  loading: false,\n} as StatisticsInterface;\n\nconst statistics = (state = initialState, { type, payload }: Record<string, string>) => {\n  switch (type) {\n    case RESET_WORDS:\n    case UPDATE_STATISTICS:\n      return { ...state, words: payload };\n    case SET_SORT_TYPE:\n      if (state.sortType === payload) {\n        return state.order === 'ASC' ? { ...state, order: 'DESC' } : { ...state, order: 'ASC' };\n      }\n      return { ...state, sortType: payload, order: 'ASC' };\n    case GET_ALL_WORDS_START:\n      return { ...state, loading: true };\n    case GET_ALL_WORDS_SUCCESS:\n      return { ...state, words: payload, loading: false };\n    case GET_ALL_WORDS_FAILURE:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n\nexport const getAllWords = () => async (dispatch: Dispatch) => {\n  dispatch({\n    type: GET_ALL_WORDS_START,\n  });\n  try {\n    const allWords = await getAllWordsAPI();\n    dispatch({\n      type: GET_ALL_WORDS_SUCCESS,\n      payload: allWords,\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_ALL_WORDS_FAILURE,\n    });\n  }\n};\n\nexport const updateStatistics = (words: Word[], type: string, name: string) => async (dispatch: Dispatch) => {\n  const updatingWords = words.map((item) => {\n    if (item.name === name) {\n      switch (type) {\n        case 'clicks':\n          return { ...item, clicks: item.clicks + 1 };\n        case 'correct':\n          return { ...item, correct: item.correct + 1, percent: percent(item.correct + 1, item.wrong) };\n        case 'wrong':\n          return { ...item, wrong: item.wrong + 1, percent: percent(item.correct, item.wrong + 1) };\n        default:\n          return item;\n      }\n    }\n    return item;\n  });\n  const currentWord = updatingWords.find((word) => word.name === name);\n  if (currentWord) {\n    dispatch({\n      type: UPDATE_STATISTICS,\n      payload: await updateStatisticAPI(currentWord),\n    });\n  }\n};\n\nexport const setSortType = (word: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: SET_SORT_TYPE,\n    payload: word,\n  });\n};\n\nexport const resetWords = () => async (dispatch: Dispatch) => {\n  dispatch({\n    type: RESET_WORDS,\n    payload: await resetWordsAPI(),\n  });\n};\n\nexport default statistics;\n","import { Dispatch } from 'redux';\nimport { getDifficultWordsAPI, getWordsAPI } from '../api';\nimport { Word } from '../api/interface';\n\nconst GET_WORDS_START = 'GET_WORDS_START';\nconst GET_WORDS_SUCCESS = 'GET_WORDS_SUCCESS';\nconst GET_WORDS_FAILURE = 'GET_WORDS_FAILURE';\nconst GET_DIFFICULT_WORDS = 'GET_DIFFICULT_WORDS';\n\nexport interface Words {\n  loading: boolean,\n  words: Word[]\n}\n\nconst initialState = {\n  words: [],\n  loading: false,\n};\n\nconst words = (state = initialState, { payload, type }: Record<string, string>) => {\n  switch (type) {\n    case GET_WORDS_START:\n      return { ...state, loading: true };\n    case GET_WORDS_SUCCESS:\n      return { ...state, loading: false, words: payload };\n    case GET_WORDS_FAILURE:\n      return { ...state, loading: false };\n    case GET_DIFFICULT_WORDS:\n      return { ...state, words: payload };\n    default:\n      return state;\n  }\n};\n\nexport const getWords = (categoryName: string) => async (dispatch: Dispatch) => {\n  dispatch({\n    type: GET_WORDS_START,\n  });\n  try {\n    const allWords = await getWordsAPI(categoryName);\n    dispatch({\n      type: GET_WORDS_SUCCESS,\n      payload: allWords,\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_WORDS_FAILURE,\n    });\n  }\n};\n\nexport const getDifficultWords = () => async (dispatch: Dispatch) => {\n  const difficultWords = await getDifficultWordsAPI();\n  dispatch({\n    type: GET_DIFFICULT_WORDS,\n    payload: difficultWords,\n  });\n};\n\nexport default words;\n","import { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\nimport { combineReducers } from 'redux';\nimport categories from './categories';\nimport { loginState } from './login';\nimport { data } from './state';\nimport statistics from './statistics';\nimport words from './words';\n\nconst createRootReducers = (history: History<unknown>) => combineReducers({\n  data,\n  words,\n  categories,\n  statistics,\n  loginState,\n  router: connectRouter(history),\n});\nexport default createRootReducers;\n","import { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createRootReducers from './reducers';\n\nexport const history = createBrowserHistory({ basename: '/english-for-kids' });\n\nconst middlewares = [thunk, routerMiddleware(history)];\n\nconst store = createStore(\n  createRootReducers(history),\n  composeWithDevTools(applyMiddleware(...middlewares)),\n);\n\nexport default store;\n","import { Categories } from '../reducers/categories';\nimport { LoginInterface } from '../reducers/login';\nimport { StateInterface } from '../reducers/state';\nimport { StatisticsInterface } from '../reducers/statistics';\nimport { Words } from '../reducers/words';\n\nexport const getCategories = (state: Categories | LoginInterface) => state.categories;\n\nexport const getStatusGame = (state: StateInterface) => state.game;\n\nexport const getCurrentCategory = (state: Categories | LoginInterface) => state.currentCategory;\n\nexport const getModal = (state: StateInterface) => state.showModal;\n\nexport const getWords = (state: Words | StatisticsInterface | LoginInterface) => state.words;\n\nexport const getStart = (state: StateInterface) => state.start;\n\nexport const getCurrentWord = (state: StateInterface) => state.currentWord;\n\nexport const getWindowAfterGame = (state: StateInterface) => state.windowAfterGame;\n\nexport const getRating = (state: StateInterface) => state.rating;\n\nexport const getAllMistakes = (state: StateInterface) => state.allMistakes;\n\nexport const getWordsForStatistics = ({ words, sortType, order }: StatisticsInterface) => {\n  words.sort((a, b) => {\n    if (order === 'ASC' ? a[sortType] > b[sortType] : a[sortType] < b[sortType]) {\n      return 1;\n    }\n    if (order === 'ASC' ? a[sortType] < b[sortType] : a[sortType] > b[sortType]) {\n      return -1;\n    }\n    return 0;\n  });\n  return words;\n};\n\nexport const getButtons = (state: StatisticsInterface) => state.buttons;\n\nexport const getOrder = (state: StatisticsInterface) => state.order;\n\nexport const getSortType = (state: StatisticsInterface) => state.sortType;\n\nexport const getLoading = (state: Categories | LoginInterface) => state.loading;\n\nexport const getLogin = (state: LoginInterface) => state.login;\n\nexport const getName = (state: LoginInterface) => state.name;\n\nexport const getPassword = (state: LoginInterface) => state.password;\n\nexport const getAuth = (state: LoginInterface) => state.auth;\n\nexport const getCreate = (state: LoginInterface) => state.create;\n\nexport const getNewCategory = (state: LoginInterface) => state.newCategory;\n\nexport const getUpdate = (state: LoginInterface) => state.update;\n\nexport const getWordsForAdmin = (state: LoginInterface) => state.words;\n\nexport const getNewWord = (state: LoginInterface) => state.newWord;\n\nexport const getWord = (state: LoginInterface) => state.data.name;\n\nexport const getTranslation = (state: LoginInterface) => state.data.translation;\n\nexport const getData = (state: LoginInterface) => state.data;\n","import { connect } from 'react-redux';\nimport React from 'react';\n// import { Redirect } from 'react-router';\nimport style from './style.module.css';\nimport {\n  checkAdmin,\n  closeLoginModal, LoginInterface, setName, setPassword,\n} from '../../../reducers/login';\nimport {\n  getLoading, getName, getPassword,\n} from '../../../selectors';\n\ninterface LoginModalInterface {\n  closeLoginModalD: Function,\n  seNameD: Function,\n  setPasswordD: Function,\n  name: string,\n  password: string,\n  loading: boolean,\n  checkAdminD: Function,\n}\n\nconst LoginModal = ({\n  closeLoginModalD, seNameD, setPasswordD, name, password, loading, checkAdminD,\n}: LoginModalInterface) => (\n  <section className={style.modal}>\n    <div className={style.window}>\n      <div className={style.login}>\n        <h2>Login</h2>\n        <form>\n          <input onInput={(e) => seNameD((e.target as HTMLInputElement).value)} type=\"text\" placeholder=\"Login\" value={name} />\n          <input\n            onInput={(e) => setPasswordD((e.target as HTMLInputElement).value)}\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n          />\n        </form>\n      </div>\n      <div className={style.buttons}>\n        <button disabled={loading} onClick={() => closeLoginModalD()} type=\"button\" className={style.cancel}>Cancel</button>\n        <button\n          disabled={loading}\n          onClick={() => checkAdminD(name, password)}\n          type=\"button\"\n          className={style.autorisation}\n        >\n          Login\n        </button>\n      </div>\n    </div>\n  </section>\n);\n\nconst mapStateToProps = ({ loginState }: Record<string, LoginInterface>) => ({\n  name: getName(loginState),\n  password: getPassword(loginState),\n  loading: getLoading(loginState),\n});\nconst mapDispatchToProps = {\n  closeLoginModalD: closeLoginModal,\n  seNameD: setName,\n  setPasswordD: setPassword,\n  checkAdminD: checkAdmin,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginModal);\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { getAuth, getLogin } from '../../selectors';\nimport style from './style.module.css';\nimport { toggleLoginModal, LoginInterface } from '../../reducers/login';\nimport LoginModal from './LoginModal';\n\ninterface Props {\n  login: boolean,\n  toggleLoginModalD: Function,\n  auth: boolean,\n}\n\nconst Login = ({ login, toggleLoginModalD, auth }: Props) => {\n  if (auth) {\n    return <Redirect from=\"/\" to=\"/admin\" />;\n  }\n  if (login) {\n    return (\n      <div className={style.wrapper}>\n        <button className={style.loginBtn} type=\"button\" aria-hidden=\"true\">Login</button>\n        <LoginModal />\n      </div>\n\n    );\n  }\n\n  return (\n    <button className={style.loginBtn} onClick={() => toggleLoginModalD()} type=\"button\">Login</button>\n  );\n};\n\nconst mapStateToProps = ({ loginState }: Record<string, LoginInterface>) => ({\n  login: getLogin(loginState),\n  auth: getAuth(loginState),\n});\nconst mapDispatchToProps = {\n  toggleLoginModalD: toggleLoginModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport React, { FunctionComponent } from 'react';\nimport {\n  getCategories, getCurrentCategory, getModal, getStatusGame,\n} from '../../selectors';\nimport {\n  finishGame, showModal, StateInterface, toggleGame,\n} from '../../reducers/state';\nimport style from './style.module.css';\nimport { Categories, selectCategory } from '../../reducers/categories';\nimport { getWords } from '../../reducers/words';\nimport LoginPage from '../LoginPage';\n\nexport interface HeaderInterface {\n    game: boolean,\n    toggle: Function,\n    openModal: Function,\n    modal: boolean,\n    categories: Array<Record<string, string>>,\n    currentCategory: string,\n    setCategory: Function,\n    finish: Function,\n    getWordsD: Function,\n}\n\nconst Header = ({\n  game,\n  toggle,\n  openModal, modal, categories, currentCategory, setCategory, finish, getWordsD,\n}: HeaderInterface) => {\n  const show = `${style.burger} ${style.show}`;\n  const background = {\n    background: game ? 'linear-gradient(180deg,#fd6a63,#feb46b)' : 'linear-gradient(180deg, #0099ae,#00bf82)',\n  };\n  return (\n    <header className={style.header}>\n      <div aria-hidden=\"true\" onClick={() => openModal()} className={modal ? show : style.burger}>\n        <div className={style.first} />\n        <div className={style.second} />\n        <div className={style.third} />\n      </div>\n      <ul style={background} className={modal ? `${style.menu} ${style.show}` : style.menu}>\n        <Link\n          onClick={() => { finish(); setCategory(''); }}\n          to=\"/\"\n          className={!currentCategory ? style.active : ''}\n        >\n          main page\n        </Link>\n        {categories.map(({ name }) => (\n          <Link\n            key={name}\n            onClick={() => { setCategory(name); finish(); getWordsD(name); }}\n            to={`/category/${name}`}\n            className={currentCategory === name ? style.active : ''}\n          >\n            {name}\n          </Link>\n        ))}\n        <Link\n          onClick={() => { setCategory('statistics'); finish(); }}\n          to=\"/statistics\"\n          className={currentCategory === 'statistics' ? style.active : ''}\n        >\n          statistics page\n        </Link>\n        <LoginPage />\n      </ul>\n      <label htmlFor=\"button\" className={style.button}>\n        <input\n          id=\"button\"\n          onChange={game ? () => toggle() : () => { toggle(); finishGame(); }}\n          type=\"checkbox\"\n          className={style.input}\n          checked={game}\n        />\n        <span className={style.buttonBack} data-game={game ? 'Play' : 'Train'} />\n        <span className={style.slider} />\n      </label>\n    </header>\n  );\n};\n\ninterface Props {\n  data: StateInterface,\n  categories: Categories\n}\n\nconst mapStateToProps = ({ data, categories }: Props) => ({\n  game: getStatusGame(data),\n  modal: getModal(data),\n  categories: getCategories(categories),\n  currentCategory: getCurrentCategory(categories),\n});\nconst mapDispatchToProps = {\n  toggle: toggleGame,\n  openModal: showModal,\n  setCategory: selectCategory,\n  finish: finishGame,\n  getWordsD: getWords,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Header as FunctionComponent);\n","import React, { FunctionComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Word } from '../../../api/interface';\nimport {\n  changeRating, nextWord, setMistake, StateInterface,\n} from '../../../reducers/state';\nimport { StatisticsInterface, updateStatistics } from '../../../reducers/statistics';\nimport {\n  getCurrentWord, getStart, getStatusGame, getWords,\n} from '../../../selectors';\nimport { soundPlay } from '../../../utills/index';\nimport style from './style.module.css';\n\ninterface MyInterface {\n    translation: string,\n    logo: string,\n    name: string,\n    game: boolean,\n    start: boolean,\n    currentWord: string,\n    setNextWord: Function,\n    setNewRating: Function,\n    addMistake: Function,\n    updateStatistic: Function,\n    words: Word[],\n    sound: string | undefined\n}\n\nconst Card = ({\n  translation,\n  sound,\n  logo, name, game, start, currentWord, setNextWord, setNewRating, addMistake, updateStatistic,\n  words,\n}: MyInterface) => {\n  function checkWord(event: React.MouseEvent<Element, MouseEvent>) {\n    if (!(event.target as HTMLElement).classList.contains(style.inactive)) {\n      if (currentWord === name) {\n        setNextWord();\n        updateStatistic(words, 'correct', currentWord);\n        setNewRating('success');\n        (event.target as HTMLElement).classList.add(style.inactive);\n        soundPlay('SUCCESS');\n      } else {\n        updateStatistic(words, 'wrong', currentWord);\n        setNewRating('error');\n        addMistake();\n        soundPlay('ERROR');\n      }\n    }\n  }\n  const background = {\n    backgroundImage: `url(${logo})`,\n    backgroundSize: !game ? 'contain' : 'cover',\n    backgroundPosition: !game ? '' : '50%',\n  };\n  const startListener = start ? (e: React.MouseEvent<Element, MouseEvent>) => checkWord(e) : () => {};\n  return (\n    <div\n      aria-hidden=\"true\"\n      onClick={game ? (e: React.MouseEvent<Element, MouseEvent>) => startListener(e)\n        : (e: React.MouseEvent<Element, MouseEvent>) => {\n          console.log(sound);\n          if (sound) {\n            soundPlay(sound, e);\n          } else {\n            soundPlay(name, e);\n          }\n          updateStatistic(words, 'clicks', name);\n        }}\n      className={style.card}\n    >\n      <div className={style.front} style={background}>\n        <div style={{ display: !game ? 'block' : 'none' }} className={style.cardHeader}>{name}</div>\n      </div>\n      <div data-type=\"back\" className={style.back} style={background}>\n        <div style={{ display: !game ? 'block' : 'none' }} className={style.cardHeader}>{translation}</div>\n      </div>\n      <div\n        aria-hidden=\"true\"\n        onClick={(event) => {\n          const parent = (event.target as HTMLElement).parentElement;\n          const back = (event.target as HTMLElement).previousElementSibling;\n          if (parent && back) {\n            parent.setAttribute('style', 'transform: rotateY(180deg)');\n            back.addEventListener('mouseout', () => {\n              parent.setAttribute('style', 'transform: rotateY(0deg)');\n            });\n          }\n        }}\n        className={style.rotate}\n        data-type=\"rotate\"\n        style={{ display: !game ? 'block' : 'none' }}\n      />\n    </div>\n  );\n};\n\ninterface Props {\n  data: StateInterface,\n  statistics: StatisticsInterface\n}\n\nconst mapStateToProps = ({ data, statistics }: Props) => ({\n  game: getStatusGame(data),\n  start: getStart(data),\n  currentWord: getCurrentWord(data),\n  words: getWords(statistics),\n});\nconst mapDispatchToProps = {\n  setNextWord: nextWord,\n  setNewRating: changeRating,\n  addMistake: setMistake,\n  updateStatistic: updateStatistics,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card as FunctionComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { StateInterface } from '../../../reducers/state';\nimport { getRating } from '../../../selectors';\nimport style from './style.module.css';\n\ninterface MyInterface {\n    rating: Array<string>\n}\n\nconst Rating = ({ rating }: MyInterface) => (\n  <div className={style.stars}>\n    {rating.map((type) => <div className={style[type]} />)}\n  </div>\n);\n\nconst mapStateToProps = ({ data }: Record<string, StateInterface>) => ({\n  rating: getRating(data),\n});\n\nexport default connect(mapStateToProps)(Rating);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { StateInterface } from '../../../reducers/state';\nimport { getAllMistakes } from '../../../selectors';\nimport { soundPlay } from '../../../utills/index';\nimport style from './style.module.css';\n\ninterface MyInterface {\n    allMistakes: number\n}\n\nconst WindowAfterGame = ({ allMistakes }: MyInterface) => {\n  const src = allMistakes === 0\n    ? 'https://github.com/rolling-scopes-school/tasks/blob/master/tasks/rslang/english-for.kids.data/img/success.jpg?raw=true'\n    : 'https://github.com/rolling-scopes-school/tasks/blob/master/tasks/rslang/english-for.kids.data/img/failure.jpg?raw=true';\n  useEffect(() => {\n    if (allMistakes === 0) {\n      soundPlay('WIN');\n    } else {\n      soundPlay('LOSE');\n    }\n  });\n  if (!allMistakes) {\n    return (\n      <div className={style.div}>\n        <h1>Win</h1>\n        <img\n          src={src}\n          alt=\"win\"\n        />\n      </div>\n    );\n  }\n  return (\n    <div className={style.div}>\n      <h1>{allMistakes === 1 ? `${allMistakes} mistake` : `${allMistakes} mistakes`}</h1>\n      <img src={src} alt=\"\" />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ data }: Record<string, StateInterface>) => ({\n  allMistakes: getAllMistakes(data),\n});\n\nexport default connect(mapStateToProps)(WindowAfterGame);\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport {\n  finishGame, openWindowAfterGame, setRandomWordOrder, startGame, StateInterface,\n} from '../../reducers/state';\nimport {\n  getCurrentCategory,\n  getCurrentWord, getStart, getStatusGame, getWindowAfterGame, getWords as getWordsSelector,\n} from '../../selectors';\nimport { createRandowWordOrder, soundPlay } from '../../utills/index';\nimport style from './style.module.css';\nimport Card from './Card';\nimport Rating from './Rating';\nimport ModalAfterGame from './ModalAfterGame';\nimport { Categories, selectCategory } from '../../reducers/categories';\nimport { Word } from '../../api/interface';\nimport { Words } from '../../reducers/words';\n\nexport interface CategoriesInterface {\n    words: Word[],\n    game: boolean,\n    start: boolean,\n    startBtn: Function,\n    currentWord: string,\n    currentCategory: string,\n    setWordOrder: Function,\n    finish: Function,\n    windowAfterGame: boolean,\n    openWinModal: Function,\n    setCategory: Function,\n    getWordsD: Function\n}\n\nexport type wordInterface = [string, {[key: string]: string}]\n\nconst CategoryPage = ({\n  words,\n  game,\n  start,\n  startBtn,\n  currentWord, setWordOrder, finish, windowAfterGame, openWinModal, setCategory,\n  currentCategory,\n}: CategoriesInterface) => {\n  useEffect(() => {\n    if (currentWord === 'END') {\n      setTimeout(openWinModal, 1000);\n      setTimeout(() => { finish(); setCategory(''); }, 3000);\n    }\n  });\n  console.log(words);\n  if (currentCategory === '') {\n    return <Redirect from=\"category/\" to=\"/\" />;\n  }\n\n  const order = createRandowWordOrder(words);\n  if (windowAfterGame) {\n    return <ModalAfterGame />;\n  }\n  return (\n    <div>\n      <Rating />\n      <div className={style.cards}>\n        {words.map((word: Word) => <Card key={word.name} {...word} />)}\n      </div>\n      {game ? (\n        <div className={style.btns}>\n          <button\n            aria-hidden=\"true\"\n            type=\"button\"\n            onClick={start ? () => soundPlay(currentWord)\n              : () => { startBtn(); setWordOrder(order); soundPlay(order[0]); }}\n            className={start ? `${style.startBtn} ${style.repeat}` : style.startBtn}\n          >\n            start game\n          </button>\n        </div>\n      ) : ''}\n    </div>\n\n  );\n};\n\ninterface Props {\n  data: StateInterface,\n  categories: Categories,\n  words: Words\n}\n\nconst mapStateToProps = ({ data, categories, words }: Props) => ({\n  currentCategory: getCurrentCategory(categories),\n  words: getWordsSelector(words),\n  game: getStatusGame(data),\n  start: getStart(data),\n  currentWord: getCurrentWord(data),\n  windowAfterGame: getWindowAfterGame(data),\n});\nconst mapDispatchToProps = {\n  setCategory: selectCategory,\n  startBtn: startGame,\n  setWordOrder: setRandomWordOrder,\n  finish: finishGame,\n  openWinModal: openWindowAfterGame,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage as FunctionComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { selectCategory } from '../../../reducers/categories';\nimport { StateInterface } from '../../../reducers/state';\nimport { getWords } from '../../../reducers/words';\nimport { getStatusGame } from '../../../selectors';\nimport style from './style.module.css';\n\ninterface MyInterface {\n    name: string,\n    logo: string,\n    game: boolean,\n    setCategory: Function,\n    getWordsD: Function,\n}\n\nconst MainCard = ({\n  name, logo, game, setCategory, getWordsD,\n}: MyInterface) => {\n  const background = {\n    background: game ? 'linear-gradient(180deg,#fd6a63,#feb46b 40%,#fff 0,#fff)'\n      : 'linear-gradient(180deg, #0099ae,#00bf82 40%, white 40%)',\n  };\n  return (\n    <Link\n      style={background}\n      onClick={() => { setCategory(name); getWordsD(name); }}\n      to={`/category/${name}`}\n      className={style.card}\n    >\n      <img src={logo} alt={name} />\n      {name}\n    </Link>\n  );\n};\n\ninterface Props {\n  data: StateInterface,\n}\n\nconst mapStateToProps = ({ data }: Props) => ({\n  game: getStatusGame(data),\n});\nconst mapDispatchToProps = {\n  setCategory: selectCategory,\n  getWordsD: getWords,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainCard);\n","import React from 'react';\n\nconst Preloader = () => (\n  <h1>Loading...</h1>\n);\n\nexport default Preloader;\n","import React, { useEffect, FunctionComponent } from 'react';\n\nimport { connect } from 'react-redux';\nimport { resetCurrentCategory } from '../../reducers/state';\nimport { getCategories as getCategoriesSelector, getLoading } from '../../selectors';\nimport style from './style.module.css';\nimport MainCard from './Card';\nimport { Categories, getCategories } from '../../reducers/categories';\nimport Preloader from '../common/Preloader';\nimport { getAllWords } from '../../reducers/statistics';\n\nexport interface MainInterface {\n    categories: Array<Record<string, string>>,\n    resetCategory: Function,\n    getCategoriesD: Function,\n    loading: boolean,\n    getAllWordsD: Function\n}\n\nconst MainPage = ({\n  categories, resetCategory, getCategoriesD, loading, getAllWordsD,\n}: MainInterface) => {\n  useEffect(() => { resetCategory(); getCategoriesD(); getAllWordsD(); }, []);\n  if (loading) {\n    return <Preloader />;\n  }\n  return (\n    <main>\n      <div className={style.cards}>\n        {categories.map((category) => <MainCard key={category.name} name={category.name} logo={category.logo} />)}\n      </div>\n    </main>\n  );\n};\n\nconst mapStateToProps = ({ categories }: Record<string, Categories>) => ({\n  categories: getCategoriesSelector(categories),\n  loading: getLoading(categories),\n});\nconst mapDispatchToProps = {\n  resetCategory: resetCurrentCategory,\n  getCategoriesD: getCategories,\n  getAllWordsD: getAllWords,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage as FunctionComponent);\n","import React from 'react';\n\nconst StatisticRow = ({\n  name, translation, category, clicks, correct, wrong, percent,\n}: Record<string, string | number>) => (\n  <tr>\n    <td>{name}</td>\n    <td>{translation}</td>\n    <td>{category}</td>\n    <td>{clicks}</td>\n    <td>{correct}</td>\n    <td>{wrong}</td>\n    <td>{percent}</td>\n  </tr>\n);\n\nexport default StatisticRow;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setSortType } from '../../../reducers/statistics';\nimport style from './style.module.css';\n\ninterface MyInterface {\n    name: string,\n    order: string,\n    setType: Function,\n    sortType: string\n}\n\nconst StatisticHeader = ({\n  name, order, setType, sortType,\n}: MyInterface) => {\n  let header = name;\n  switch (name) {\n    case 'percent':\n      header = '% errors';\n      break;\n    case 'name':\n      header = 'word';\n      break;\n    default:\n      break;\n  }\n  const text = order === 'ASC' ? `↓ ${header}` : `↑ ${header}`;\n  return (\n    <td aria-hidden=\"true\" className={style.sort} onClick={() => setType(name)}>{sortType === name ? text : header}</td>\n  );\n};\n\nconst mapStateToProps = () => ({\n\n});\nconst mapDispatchToProps = {\n  setType: setSortType,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatisticHeader);\n","import { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport React, { FunctionComponent, useEffect } from 'react';\nimport {\n  getButtons, getOrder, getSortType, getStatusGame, getWordsForStatistics,\n} from '../../selectors';\nimport style from './style.module.css';\nimport { getAllWords, resetWords, StatisticsInterface } from '../../reducers/statistics';\nimport { StateInterface } from '../../reducers/state';\nimport StatisticRow from './StatisticRow';\nimport StatisticHeader from './StatisticHeader';\nimport { selectCategory } from '../../reducers/categories';\nimport { getDifficultWords } from '../../reducers/words';\n\nexport interface StatInterface {\n    words: Array<Record<string, string | number>>,\n    buttons: Array<string>,\n    game: boolean,\n    reset: Function,\n    getDifficultWordsD: Function,\n    setCategory: Function,\n    getAllWordsD: Function,\n    sortType: string,\n    order: string,\n}\n\nconst StatisticsPage = ({\n  words, buttons, game, reset, getDifficultWordsD, setCategory, getAllWordsD, sortType, order,\n}: StatInterface) => {\n  useEffect(() => getAllWordsD(), []);\n  const background = {\n    background: game ? 'linear-gradient(-90deg,#fd6a63,#feb46b)' : 'linear-gradient(-90deg, #0099ae,#00bf82)',\n    boxShadow: game ? '3px 3px 15px 2px rgb(138 83 0 / 25%), -3px -3px 15px 2px rgb(138 83 0 / 22%)'\n      : '3px 3px 15px 2px rgb(0 169 130 / 25%), -3px -3px 15px 2px rgb(0 169 130 / 25%)',\n  };\n  if (words.length === 0) {\n    return <Redirect from=\"/statistics\" to=\"/\" />;\n  }\n  return (\n    <div className={style.wrapper}>\n      <div className={style.buttons}>\n        <Link\n          onClick={() => { getDifficultWordsD(); setCategory('Difficult Words'); }}\n          to=\"/category/Difficult Words\"\n          style={background}\n          className={style.repeat}\n        >\n          repeat difficult words\n        </Link>\n        <button type=\"button\" onClick={() => reset()} style={background} className={style.reset}>reset</button>\n      </div>\n      <table style={{ boxShadow: background.boxShadow }} className={style.statistics}>\n        <caption style={background}>Cards</caption>\n        <thead>\n          <tr className={style.row}>\n            {buttons.map((button) => <StatisticHeader key={button} name={button} sortType={sortType} order={order} />)}\n          </tr>\n        </thead>\n        <tbody>\n          {words.map((word) => <StatisticRow key={word.translation} {...word} />)}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\ninterface Props {\n  data: StateInterface,\n  statistics: StatisticsInterface\n}\n\nconst mapStateToProps = ({ data, statistics }: Props) => ({\n  words: getWordsForStatistics(statistics),\n  buttons: getButtons(statistics),\n  game: getStatusGame(data),\n  order: getOrder(statistics),\n  sortType: getSortType(statistics),\n});\nconst mapDispatchToProps = {\n  reset: resetWords,\n  getDifficultWordsD: getDifficultWords,\n  setCategory: selectCategory,\n  getAllWordsD: getAllWords,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatisticsPage as FunctionComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  deleteNewCategory, LoginInterface, newCategory,\n} from '../../../../reducers/login';\nimport { getCreate, getNewCategory, getUpdate } from '../../../../selectors';\nimport style from './style.module.css';\n\ninterface UpdateItemInterface {\n  categoryName: string,\n  newCategoryD: Function,\n  deleteNewCategoryD: Function,\n  updateDispatch: Function,\n  name: string,\n  update: boolean,\n  create: boolean\n}\n\nconst UpdateItem = ({\n  name, categoryName, newCategoryD, deleteNewCategoryD, updateDispatch, update, create,\n}: UpdateItemInterface) => (\n  <div className={`${style.create} ${style.newCategory}`}>\n    <p className={style.title}>Category Name:</p>\n    <input\n      onInput={(e) => newCategoryD((e.target as HTMLInputElement).value)}\n      id=\"input\"\n      className={style.input}\n      type=\"text\"\n      value={categoryName}\n    />\n    <div className={style.buttons}>\n      <button onClick={() => deleteNewCategoryD()} className={style.button} type=\"button\">Cancel</button>\n      <button\n        onClick={() => {\n          if (create) {\n            updateDispatch(categoryName);\n          }\n          if (update) {\n            updateDispatch(name, categoryName);\n          }\n        }}\n        className={style.button}\n        type=\"button\"\n      >\n        Create\n      </button>\n    </div>\n  </div>\n);\n\nconst mapStateToProps = ({ loginState }: Record<string, LoginInterface>) => ({\n  categoryName: getNewCategory(loginState),\n  update: getUpdate(loginState),\n  create: getCreate(loginState),\n});\nconst mapDispatchToProps = {\n  newCategoryD: newCategory,\n  deleteNewCategoryD: deleteNewCategory,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  deleteCategory, LoginInterface, setCurrentCategory, toggleUpdate, updateCategory,\n} from '../../../../reducers/login';\nimport { getCurrentCategory, getUpdate } from '../../../../selectors';\nimport UpdateItem from '../UpdateItem';\nimport style from './style.module.css';\n\ninterface ItemInterface {\n  name: string,\n  length: number,\n  deleteCategoryD: Function,\n  update: boolean,\n  updateCategoryD: Function,\n  toggleUpdateD: Function,\n  setCurrentCategoryD: Function,\n  currentCategory: string,\n}\n\nconst Item = ({\n  name, length, deleteCategoryD, update, updateCategoryD, toggleUpdateD, setCurrentCategoryD, currentCategory,\n}: ItemInterface) => {\n  if (update && currentCategory === name) {\n    return <UpdateItem name={name} updateDispatch={updateCategoryD} />;\n  }\n  return (\n    <div className={style.category}>\n      <button onClick={() => deleteCategoryD(name)} className={style.delete} type=\"button\">×</button>\n      <h2 className={style.title}>{name}</h2>\n      <h3 className={style.length}>\n        Words:\n        {length}\n      </h3>\n      <div className={style.buttons}>\n        <button\n          onClick={() => { setCurrentCategoryD(name); toggleUpdateD(name); }}\n          className={style.button}\n          type=\"button\"\n        >\n          Update\n        </button>\n        <Link\n          onClick={() => { setCurrentCategoryD(name); }}\n          className={style.button}\n          to={`/admin/categories/${name}`}\n        >\n          Add Word\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ loginState }: Record<string, LoginInterface>) => ({\n  update: getUpdate(loginState),\n  currentCategory: getCurrentCategory(loginState),\n});\n\nconst mapDispatchToProps = {\n  deleteCategoryD: deleteCategory,\n  updateCategoryD: updateCategory,\n  toggleUpdateD: toggleUpdate,\n  setCurrentCategoryD: setCurrentCategory,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);\n","import React, { useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport { Category } from '../../../api/interface';\nimport {\n  createCategory, createNewCategory, getCategoriesAdmin, LoginInterface,\n} from '../../../reducers/login';\nimport { getCategories, getCreate } from '../../../selectors';\nimport Item from './Item';\nimport style from './style.module.css';\nimport UpdateItem from './UpdateItem';\n\ninterface AdminCategoriesInterface {\n  categories: Category[],\n  getCategoriesD: Function,\n  createCategoryD: Function,\n  create: boolean,\n  createNewCategoryD: Function\n}\n\nconst AdminCategories = ({\n  categories, getCategoriesD, createCategoryD, create, createNewCategoryD,\n}: AdminCategoriesInterface) => {\n  useEffect(() => getCategoriesD(), []);\n  return (\n    <div className={style.categories}>\n      {categories.map((category) => <Item key={category.name} {...category} />)}\n      {create ? <UpdateItem name=\"\" updateDispatch={createNewCategoryD} /> : ''}\n      <div aria-hidden=\"true\" onClick={() => createCategoryD()} className={style.create}>\n        <h2 className={style.field}>Create new Category</h2>\n        <div className={style.plus}>+</div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ loginState }: Record<string, LoginInterface>) => ({\n  categories: getCategories(loginState),\n  create: getCreate(loginState),\n});\nconst mapDispatchToProps = {\n  getCategoriesD: getCategoriesAdmin,\n  createCategoryD: createCategory,\n  createNewCategoryD: createNewCategory,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminCategories);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { LoginInterface, logOut, setCurrentCategory } from '../../../reducers/login';\nimport { getCurrentCategory } from '../../../selectors';\nimport style from './style.module.css';\n\ninterface AdminHeaderInterface {\n  currentCategory: string,\n  setCurrentCategoryD: Function,\n  logOutD: Function,\n}\n\nconst AdminHeader = ({ currentCategory, setCurrentCategoryD, logOutD }: AdminHeaderInterface) => (\n  <div className={style.header}>\n    <div className={style.buttons}>\n      <Link\n        onClick={() => setCurrentCategoryD('')}\n        className={currentCategory === '' ? `${style.link} ${style.active}` : style.link}\n        to=\"/admin\"\n      >\n        Categories\n      </Link>\n      <h2\n        className={currentCategory !== '' ? `${style.link} ${style.active}` : style.link}\n      >\n        Words\n      </h2>\n    </div>\n    <Link onClick={() => logOutD()} to=\"/\" className={style.logOut}>Log Out</Link>\n  </div>\n);\n\nconst mapStateToProps = ({ loginState }: Record<string, LoginInterface>) => ({\n  currentCategory: getCurrentCategory(loginState),\n});\nconst mapDispatchToProps = {\n  setCurrentCategoryD: setCurrentCategory,\n  logOutD: logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHeader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  createWord,\n  LoginInterface, setImage, setNewWord, setSound, setTranslation, setWord, updateWord,\n} from '../../../../reducers/login';\nimport {\n  getCreate,\n  getCurrentCategory, getData, getTranslation, getWord,\n} from '../../../../selectors';\nimport { encodeImageFileAsURL } from '../../../../utills';\nimport style from './style.module.css';\n\ninterface UpdateItemInterface {\n  word: string,\n  translation: string,\n  setWordD: Function,\n  setTranslationD: Function,\n  setNewWordD: Function,\n  data: Record<string, string>,\n  currentCategory: string,\n  updateWordD: Function,\n  create: boolean,\n  createWordD: Function,\n  setImageD: Function,\n  setSoundD: Function\n}\n\nconst UpdateItem = ({\n  word,\n  translation,\n  setWordD, setTranslationD, setNewWordD, data, currentCategory, updateWordD, create, createWordD, setImageD, setSoundD,\n}: UpdateItemInterface) => {\n  console.log();\n  return (\n    <div className={style.create}>\n      <div>\n        <p className={style.title}>Word:</p>\n        <input\n          onInput={(e) => setWordD((e.target as HTMLInputElement).value)}\n          id=\"input\"\n          className={style.input}\n          type=\"text\"\n          value={word}\n        />\n      </div>\n      <div>\n        <p className={style.title}>Translation:</p>\n        <input\n          onInput={(e) => setTranslationD((e.target as HTMLInputElement).value)}\n          id=\"input\"\n          className={style.input}\n          type=\"text\"\n          value={translation}\n        />\n      </div>\n      <div className={style.buttons}>\n        <div className={style.button}>\n          <span>Sound:</span>\n          <label className={style.label} htmlFor=\"sound\">\n            <input\n              onChange={(e) => {\n                encodeImageFileAsURL(e.target, setSoundD);\n              }}\n              type=\"file\"\n              accept=\"audio/*\"\n              id=\"sound\"\n            />\n            Select Category\n          </label>\n        </div>\n        <div className={style.button}>\n          <span>Image:</span>\n          <label className={style.label} htmlFor=\"image\">\n            <input\n              type=\"file\"\n              onChange={(e) => {\n                encodeImageFileAsURL(e.target, setImageD);\n              }}\n              id=\"image\"\n              accept=\"image/*\"\n            />\n            Select Category\n          </label>\n        </div>\n      </div>\n      <div className={style.controls}>\n        <button onClick={() => setNewWordD('')} className={style.control} type=\"button\">Cancel</button>\n        <button\n          onClick={() => {\n            if (create) {\n              createWordD(currentCategory, data);\n            } else {\n              updateWordD(currentCategory, data);\n            }\n          }}\n          className={style.control}\n          type=\"button\"\n        >\n          Create\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ loginState }: Record<string, LoginInterface>) => ({\n  word: getWord(loginState),\n  translation: getTranslation(loginState),\n  data: getData(loginState),\n  currentCategory: getCurrentCategory(loginState),\n  create: getCreate(loginState),\n});\nconst mapDispatchToProps = {\n  setWordD: setWord,\n  setTranslationD: setTranslation,\n  setNewWordD: setNewWord,\n  updateWordD: updateWord,\n  createWordD: createWord,\n  setImageD: setImage,\n  setSoundD: setSound,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  deleteWord, LoginInterface, setNewWord, setPrevData, toggleUpdate,\n} from '../../../../reducers/login';\nimport { getCurrentCategory, getNewWord } from '../../../../selectors';\nimport UpdateItem from '../UpdateItem';\nimport style from './style.module.css';\n\ninterface AdminWordInterface {\n  name: string,\n  translation: string,\n  logo: string,\n  deleteWordD: Function,\n  currentCategory: string,\n  setPrevDataD: Function,\n  setNewWordD: Function,\n  newWord: string,\n}\n\nconst AdminWord = ({\n  name, translation, logo, deleteWordD, currentCategory, setPrevDataD, setNewWordD, newWord,\n}: AdminWordInterface) => {\n  if (newWord === name) {\n    return <UpdateItem />;\n  }\n  return (\n    <div className={style.card}>\n      <button onClick={() => deleteWordD(currentCategory, name)} className={style.delete} type=\"button\">×</button>\n      <h2 className={style.field}>\n        Word:\n        <span>{name}</span>\n      </h2>\n      <h2 className={style.field}>\n        Translation:\n        <span>{translation}</span>\n      </h2>\n      <h2 className={style.field}>\n        Sound file:\n        <span>\n          {name}\n          .mp3\n        </span>\n      </h2>\n      <h2 className={style.field}>Image:</h2>\n      <img src={logo} alt={name} />\n      <button\n        onClick={() => { setPrevDataD({ name, translation, logo }); setNewWordD(name); }}\n        className={style.change}\n        type=\"button\"\n      >\n        Change\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ loginState }: Record<string, LoginInterface >) => ({\n  currentCategory: getCurrentCategory(loginState),\n  newWord: getNewWord(loginState),\n});\nconst mapDispatchToProps = {\n  deleteWordD: deleteWord,\n  setPrevDataD: setPrevData,\n  toggleUpdateD: toggleUpdate,\n  setNewWordD: setNewWord,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminWord);\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { Word } from '../../../api/interface';\nimport { createCategory, LoginInterface, setWords } from '../../../reducers/login';\nimport { getCreate, getCurrentCategory, getWordsForAdmin } from '../../../selectors';\nimport Item from './Item';\nimport style from './style.module.css';\nimport UpdateItem from './UpdateItem';\n\ninterface AdminWordsInterface {\n  words: Word[],\n  currentCategory: string,\n  create: string,\n  createCategoryD: Function,\n  setWordsD: Function\n}\n\nconst AdminWords = ({\n  words, currentCategory, create, createCategoryD, setWordsD,\n}: AdminWordsInterface) => {\n  if (currentCategory === '') {\n    return <Redirect from=\"admin/api/categories\" to=\"/admin\" />;\n  }\n  useEffect(() => setWordsD(currentCategory), []);\n  return (\n    <div>\n      <h2>\n        Category:\n        <span className={style.category}>{currentCategory}</span>\n      </h2>\n      <div className={style.words}>\n        {words.map((word) => <Item key={word.name} {...word} />)}\n        {create ? <UpdateItem /> : ''}\n        <div aria-hidden=\"true\" onClick={() => createCategoryD()} className={style.create}>\n          <h2 className={style.field}>Add new Word</h2>\n          <div className={style.plus}>+</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ loginState }: Record<string, LoginInterface>) => ({\n  words: getWordsForAdmin(loginState),\n  currentCategory: getCurrentCategory(loginState),\n  create: getCreate(loginState),\n});\nconst mapDispatchToProps = {\n  createCategoryD: createCategory,\n  setWordsD: setWords,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminWords as FunctionComponent);\n","import React, { FunctionComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { LoginInterface } from '../../reducers/login';\nimport { getAuth } from '../../selectors';\nimport AdminCategories from './AdminCategories';\nimport AdminHeader from './AdminHeader';\nimport AdminWords from './AdminWords';\n\nconst AdminPage = ({ auth }: Record<string, boolean>) => {\n  if (!auth) {\n    return <Redirect from=\"/admin\" to=\"/\" />;\n  }\n  return (\n    <div>\n      <AdminHeader />\n      <Switch>\n        <Route exact path=\"/admin\" component={AdminCategories} />\n        <Route exact path=\"/admin/categories/:name\" component={AdminWords} />\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ loginState }: Record<string, LoginInterface>) => ({\n  auth: getAuth(loginState),\n});\n\nexport default connect(mapStateToProps)(AdminPage as FunctionComponent);\n","import { Switch, Route } from 'react-router';\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport React, { FunctionComponent } from 'react';\nimport style from './style.module.css';\n\nimport Header from './components/Header';\nimport CategoryPage from './components/CategoryPage';\nimport MainPage from './components/MainPage';\nimport StatisticsPage from './components/StatisticsPage';\nimport { getLogin, getModal } from './selectors';\nimport { closeModal, StateInterface } from './reducers/state';\nimport { closeLoginModal, LoginInterface } from './reducers/login';\nimport AdminPage from './components/AdminPage';\n\ninterface MyInterface {\n  modal: string,\n  close: Function,\n  closeLoginModalD: Function,\n  login: boolean,\n}\n\nconst App = ({\n  modal, close, closeLoginModalD, login,\n}: MyInterface) => {\n  function eventTarget(event: React.MouseEvent<Element, MouseEvent>) {\n    const { target } = event;\n    if (target) {\n      if (!login) {\n        if ((target as HTMLElement).localName !== 'ul' && (target as HTMLElement).localName !== 'button') {\n          close();\n        }\n      } else if ((target as HTMLElement).localName === 'section') {\n        closeLoginModalD();\n      }\n    }\n  }\n  return (\n    <div\n      aria-hidden=\"true\"\n      onClick={modal ? (e: React.MouseEvent<Element, MouseEvent>) => eventTarget(e) : () => {}}\n      className={style.app}\n    >\n      <Switch>\n        <Route path=\"/category/:name\" component={Header} />\n        <Route path=\"/statistics\" component={Header} />\n        <Route exact path=\"/\" component={Header} />\n      </Switch>\n      <Switch>\n        <Route path=\"/admin\" component={AdminPage} />\n        <Route path=\"/category/:name\" component={CategoryPage} />\n        <Route path=\"/statistics\" component={StatisticsPage} />\n        <Route path=\"/\" component={MainPage} />\n      </Switch>\n    </div>\n  );\n};\n\ninterface Props {\n  data: StateInterface,\n  loginState: LoginInterface\n}\n\nconst mapStateToProps = ({ data, loginState }: Props) => ({\n  modal: getModal(data),\n  login: getLogin(loginState),\n});\nconst mapDispatchToProps = {\n  close: closeModal,\n  closeLoginModalD: closeLoginModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App as FunctionComponent);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport store, { history } from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}